
ExADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803e00  00803e00  0000048a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000436  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000048a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001c48  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000162d  00000000  00000000  00002168  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000032a  00000000  00000000  00003795  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00003ac0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000fc0  00000000  00000000  00003af4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000fe  00000000  00000000  00004ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00004bb2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	20 c0       	rjmp	.+64     	; 0x44 <__bad_interrupt>
   4:	1f c0       	rjmp	.+62     	; 0x44 <__bad_interrupt>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__bad_interrupt>
   8:	1d c0       	rjmp	.+58     	; 0x44 <__bad_interrupt>
   a:	1c c0       	rjmp	.+56     	; 0x44 <__bad_interrupt>
   c:	1b c0       	rjmp	.+54     	; 0x44 <__bad_interrupt>
   e:	1a c0       	rjmp	.+52     	; 0x44 <__bad_interrupt>
  10:	19 c0       	rjmp	.+50     	; 0x44 <__bad_interrupt>
  12:	18 c0       	rjmp	.+48     	; 0x44 <__bad_interrupt>
  14:	17 c0       	rjmp	.+46     	; 0x44 <__bad_interrupt>
  16:	16 c0       	rjmp	.+44     	; 0x44 <__bad_interrupt>
  18:	15 c0       	rjmp	.+42     	; 0x44 <__bad_interrupt>
  1a:	14 c0       	rjmp	.+40     	; 0x44 <__bad_interrupt>
  1c:	13 c0       	rjmp	.+38     	; 0x44 <__bad_interrupt>
  1e:	12 c0       	rjmp	.+36     	; 0x44 <__bad_interrupt>
  20:	11 c0       	rjmp	.+34     	; 0x44 <__bad_interrupt>
  22:	10 c0       	rjmp	.+32     	; 0x44 <__bad_interrupt>
  24:	0f c0       	rjmp	.+30     	; 0x44 <__bad_interrupt>
  26:	0e c0       	rjmp	.+28     	; 0x44 <__bad_interrupt>
  28:	0d c0       	rjmp	.+26     	; 0x44 <__bad_interrupt>
  2a:	0c c0       	rjmp	.+24     	; 0x44 <__bad_interrupt>
  2c:	0b c0       	rjmp	.+22     	; 0x44 <__bad_interrupt>
  2e:	0a c0       	rjmp	.+20     	; 0x44 <__bad_interrupt>
  30:	09 c0       	rjmp	.+18     	; 0x44 <__bad_interrupt>
  32:	08 c0       	rjmp	.+16     	; 0x44 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62
  40:	27 d0       	rcall	.+78     	; 0x90 <main>
  42:	f7 c1       	rjmp	.+1006   	; 0x432 <_exit>

00000044 <__bad_interrupt>:
  44:	dd cf       	rjmp	.-70     	; 0x0 <__vectors>

00000046 <blink>:


void blink(uint8_t n)
{
	uint8_t i;
	PORTA.DIRSET = _BV(3);
  46:	98 e0       	ldi	r25, 0x08	; 8
  48:	90 93 01 04 	sts	0x0401, r25	; 0x800401 <__TEXT_REGION_LENGTH__+0x700401>
	for(i=0; i<2*n; i++)
  4c:	48 2f       	mov	r20, r24
  4e:	50 e0       	ldi	r21, 0x00	; 0
  50:	44 0f       	add	r20, r20
  52:	55 1f       	adc	r21, r21
  54:	14 16       	cp	r1, r20
  56:	15 06       	cpc	r1, r21
  58:	94 f4       	brge	.+36     	; 0x7e <blink+0x38>
  5a:	90 e0       	ldi	r25, 0x00	; 0
	{
		PORTA.OUTTGL = _BV(3);
  5c:	e0 e0       	ldi	r30, 0x00	; 0
  5e:	f4 e0       	ldi	r31, 0x04	; 4
  60:	88 e0       	ldi	r24, 0x08	; 8
  62:	87 83       	std	Z+7, r24	; 0x07
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  64:	25 ed       	ldi	r18, 0xD5	; 213
  66:	38 e0       	ldi	r19, 0x08	; 8
  68:	62 e0       	ldi	r22, 0x02	; 2
  6a:	21 50       	subi	r18, 0x01	; 1
  6c:	30 40       	sbci	r19, 0x00	; 0
  6e:	60 40       	sbci	r22, 0x00	; 0
  70:	e1 f7       	brne	.-8      	; 0x6a <blink+0x24>

void blink(uint8_t n)
{
	uint8_t i;
	PORTA.DIRSET = _BV(3);
	for(i=0; i<2*n; i++)
  72:	9f 5f       	subi	r25, 0xFF	; 255
  74:	29 2f       	mov	r18, r25
  76:	30 e0       	ldi	r19, 0x00	; 0
  78:	24 17       	cp	r18, r20
  7a:	35 07       	cpc	r19, r21
  7c:	94 f3       	brlt	.-28     	; 0x62 <blink+0x1c>
  7e:	8a e2       	ldi	r24, 0x2A	; 42
  80:	9c e2       	ldi	r25, 0x2C	; 44
  82:	2a e0       	ldi	r18, 0x0A	; 10
  84:	81 50       	subi	r24, 0x01	; 1
  86:	90 40       	sbci	r25, 0x00	; 0
  88:	20 40       	sbci	r18, 0x00	; 0
  8a:	e1 f7       	brne	.-8      	; 0x84 <blink+0x3e>
  8c:	00 00       	nop
  8e:	08 95       	ret

00000090 <main>:
int main(void)
{
    float value = 0;
	
	// VREF_0_init
	VREF.CTRLA	= VREF_ADC0REFSEL_1V1_gc;
  90:	e0 ea       	ldi	r30, 0xA0	; 160
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 e1       	ldi	r24, 0x10	; 16
  96:	80 83       	st	Z, r24
	VREF.CTRLB	= VREF_ADC0REFEN_bm;
  98:	82 e0       	ldi	r24, 0x02	; 2
  9a:	81 83       	std	Z+1, r24	; 0x01
	
	// ADC_0_initiallization
	ADC0.MUXPOS	= ADC_MUXPOS_INTREF_gc;
  9c:	e0 e0       	ldi	r30, 0x00	; 0
  9e:	f6 e0       	ldi	r31, 0x06	; 6
  a0:	8d e1       	ldi	r24, 0x1D	; 29
  a2:	86 83       	std	Z+6, r24	; 0x06
	ADC0.CTRLC	= ADC_PRESC_DIV4_gc | ADC_REFSEL_VDDREF_gc;		// Vdd(Vcc) be ADC reference
  a4:	81 e1       	ldi	r24, 0x11	; 17
  a6:	82 83       	std	Z+2, r24	; 0x02
	
	ADC0.CTRLA	= ADC_ENABLE_bm | ADC_FREERUN_bm;		// enable freerun, 10bit(default)
  a8:	83 e0       	ldi	r24, 0x03	; 3
  aa:	80 83       	st	Z, r24
	ADC0.COMMAND |= 1;		// Start running ADC
  ac:	80 85       	ldd	r24, Z+8	; 0x08
  ae:	81 60       	ori	r24, 0x01	; 1
  b0:	80 87       	std	Z+8, r24	; 0x08
}


int main(void)
{
    float value = 0;
  b2:	c1 2c       	mov	r12, r1
  b4:	d1 2c       	mov	r13, r1
  b6:	76 01       	movw	r14, r12
	ADC0.CTRLA	= ADC_ENABLE_bm | ADC_FREERUN_bm;		// enable freerun, 10bit(default)
	ADC0.COMMAND |= 1;		// Start running ADC
	
    while (1) 
    {
		if(ADC0.INTFLAGS)
  b8:	c0 e0       	ldi	r28, 0x00	; 0
  ba:	d6 e0       	ldi	r29, 0x06	; 6
  bc:	8b 85       	ldd	r24, Y+11	; 0x0b
  be:	88 23       	and	r24, r24
  c0:	71 f0       	breq	.+28     	; 0xde <main+0x4e>
		{
			value = (0x400 * 1.1) / ADC0.RES;		// Calcurat the Vcc value
  c2:	68 89       	ldd	r22, Y+16	; 0x10
  c4:	79 89       	ldd	r23, Y+17	; 0x11
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	25 d1       	rcall	.+586    	; 0x316 <__floatunsisf>
  cc:	9b 01       	movw	r18, r22
  ce:	ac 01       	movw	r20, r24
  d0:	6d ec       	ldi	r22, 0xCD	; 205
  d2:	7c ec       	ldi	r23, 0xCC	; 204
  d4:	8c e8       	ldi	r24, 0x8C	; 140
  d6:	94 e4       	ldi	r25, 0x44	; 68
  d8:	7d d0       	rcall	.+250    	; 0x1d4 <__divsf3>
  da:	6b 01       	movw	r12, r22
  dc:	7c 01       	movw	r14, r24
		}
		blink((uint8_t) value * 2.0);
  de:	c7 01       	movw	r24, r14
  e0:	b6 01       	movw	r22, r12
  e2:	ea d0       	rcall	.+468    	; 0x2b8 <__fixunssfsi>
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	17 d1       	rcall	.+558    	; 0x31a <__floatsisf>
  ec:	9b 01       	movw	r18, r22
  ee:	ac 01       	movw	r20, r24
  f0:	05 d0       	rcall	.+10     	; 0xfc <__addsf3>
  f2:	e2 d0       	rcall	.+452    	; 0x2b8 <__fixunssfsi>
  f4:	86 2f       	mov	r24, r22
  f6:	a7 df       	rcall	.-178    	; 0x46 <blink>
    }
  f8:	e1 cf       	rjmp	.-62     	; 0xbc <main+0x2c>

000000fa <__subsf3>:
  fa:	50 58       	subi	r21, 0x80	; 128

000000fc <__addsf3>:
  fc:	bb 27       	eor	r27, r27
  fe:	aa 27       	eor	r26, r26
 100:	0e 94 95 00 	call	0x12a	; 0x12a <__addsf3x>
 104:	0c 94 df 01 	jmp	0x3be	; 0x3be <__fp_round>
 108:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__fp_pscA>
 10c:	38 f0       	brcs	.+14     	; 0x11c <__addsf3+0x20>
 10e:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__fp_pscB>
 112:	20 f0       	brcs	.+8      	; 0x11c <__addsf3+0x20>
 114:	39 f4       	brne	.+14     	; 0x124 <__addsf3+0x28>
 116:	9f 3f       	cpi	r25, 0xFF	; 255
 118:	19 f4       	brne	.+6      	; 0x120 <__addsf3+0x24>
 11a:	26 f4       	brtc	.+8      	; 0x124 <__addsf3+0x28>
 11c:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__fp_nan>
 120:	0e f4       	brtc	.+2      	; 0x124 <__addsf3+0x28>
 122:	e0 95       	com	r30
 124:	e7 fb       	bst	r30, 7
 126:	0c 94 c8 01 	jmp	0x390	; 0x390 <__fp_inf>

0000012a <__addsf3x>:
 12a:	e9 2f       	mov	r30, r25
 12c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__fp_split3>
 130:	58 f3       	brcs	.-42     	; 0x108 <__addsf3+0xc>
 132:	ba 17       	cp	r27, r26
 134:	62 07       	cpc	r22, r18
 136:	73 07       	cpc	r23, r19
 138:	84 07       	cpc	r24, r20
 13a:	95 07       	cpc	r25, r21
 13c:	20 f0       	brcs	.+8      	; 0x146 <__addsf3x+0x1c>
 13e:	79 f4       	brne	.+30     	; 0x15e <__addsf3x+0x34>
 140:	a6 f5       	brtc	.+104    	; 0x1aa <__addsf3x+0x80>
 142:	0c 94 12 02 	jmp	0x424	; 0x424 <__fp_zero>
 146:	0e f4       	brtc	.+2      	; 0x14a <__addsf3x+0x20>
 148:	e0 95       	com	r30
 14a:	0b 2e       	mov	r0, r27
 14c:	ba 2f       	mov	r27, r26
 14e:	a0 2d       	mov	r26, r0
 150:	0b 01       	movw	r0, r22
 152:	b9 01       	movw	r22, r18
 154:	90 01       	movw	r18, r0
 156:	0c 01       	movw	r0, r24
 158:	ca 01       	movw	r24, r20
 15a:	a0 01       	movw	r20, r0
 15c:	11 24       	eor	r1, r1
 15e:	ff 27       	eor	r31, r31
 160:	59 1b       	sub	r21, r25
 162:	99 f0       	breq	.+38     	; 0x18a <__addsf3x+0x60>
 164:	59 3f       	cpi	r21, 0xF9	; 249
 166:	50 f4       	brcc	.+20     	; 0x17c <__addsf3x+0x52>
 168:	50 3e       	cpi	r21, 0xE0	; 224
 16a:	68 f1       	brcs	.+90     	; 0x1c6 <__addsf3x+0x9c>
 16c:	1a 16       	cp	r1, r26
 16e:	f0 40       	sbci	r31, 0x00	; 0
 170:	a2 2f       	mov	r26, r18
 172:	23 2f       	mov	r18, r19
 174:	34 2f       	mov	r19, r20
 176:	44 27       	eor	r20, r20
 178:	58 5f       	subi	r21, 0xF8	; 248
 17a:	f3 cf       	rjmp	.-26     	; 0x162 <__addsf3x+0x38>
 17c:	46 95       	lsr	r20
 17e:	37 95       	ror	r19
 180:	27 95       	ror	r18
 182:	a7 95       	ror	r26
 184:	f0 40       	sbci	r31, 0x00	; 0
 186:	53 95       	inc	r21
 188:	c9 f7       	brne	.-14     	; 0x17c <__addsf3x+0x52>
 18a:	7e f4       	brtc	.+30     	; 0x1aa <__addsf3x+0x80>
 18c:	1f 16       	cp	r1, r31
 18e:	ba 0b       	sbc	r27, r26
 190:	62 0b       	sbc	r22, r18
 192:	73 0b       	sbc	r23, r19
 194:	84 0b       	sbc	r24, r20
 196:	ba f0       	brmi	.+46     	; 0x1c6 <__addsf3x+0x9c>
 198:	91 50       	subi	r25, 0x01	; 1
 19a:	a1 f0       	breq	.+40     	; 0x1c4 <__addsf3x+0x9a>
 19c:	ff 0f       	add	r31, r31
 19e:	bb 1f       	adc	r27, r27
 1a0:	66 1f       	adc	r22, r22
 1a2:	77 1f       	adc	r23, r23
 1a4:	88 1f       	adc	r24, r24
 1a6:	c2 f7       	brpl	.-16     	; 0x198 <__addsf3x+0x6e>
 1a8:	0e c0       	rjmp	.+28     	; 0x1c6 <__addsf3x+0x9c>
 1aa:	ba 0f       	add	r27, r26
 1ac:	62 1f       	adc	r22, r18
 1ae:	73 1f       	adc	r23, r19
 1b0:	84 1f       	adc	r24, r20
 1b2:	48 f4       	brcc	.+18     	; 0x1c6 <__addsf3x+0x9c>
 1b4:	87 95       	ror	r24
 1b6:	77 95       	ror	r23
 1b8:	67 95       	ror	r22
 1ba:	b7 95       	ror	r27
 1bc:	f7 95       	ror	r31
 1be:	9e 3f       	cpi	r25, 0xFE	; 254
 1c0:	08 f0       	brcs	.+2      	; 0x1c4 <__addsf3x+0x9a>
 1c2:	b0 cf       	rjmp	.-160    	; 0x124 <__addsf3+0x28>
 1c4:	93 95       	inc	r25
 1c6:	88 0f       	add	r24, r24
 1c8:	08 f0       	brcs	.+2      	; 0x1cc <__addsf3x+0xa2>
 1ca:	99 27       	eor	r25, r25
 1cc:	ee 0f       	add	r30, r30
 1ce:	97 95       	ror	r25
 1d0:	87 95       	ror	r24
 1d2:	08 95       	ret

000001d4 <__divsf3>:
 1d4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__divsf3x>
 1d8:	0c 94 df 01 	jmp	0x3be	; 0x3be <__fp_round>
 1dc:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__fp_pscB>
 1e0:	58 f0       	brcs	.+22     	; 0x1f8 <__divsf3+0x24>
 1e2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__fp_pscA>
 1e6:	40 f0       	brcs	.+16     	; 0x1f8 <__divsf3+0x24>
 1e8:	29 f4       	brne	.+10     	; 0x1f4 <__divsf3+0x20>
 1ea:	5f 3f       	cpi	r21, 0xFF	; 255
 1ec:	29 f0       	breq	.+10     	; 0x1f8 <__divsf3+0x24>
 1ee:	0c 94 c8 01 	jmp	0x390	; 0x390 <__fp_inf>
 1f2:	51 11       	cpse	r21, r1
 1f4:	0c 94 13 02 	jmp	0x426	; 0x426 <__fp_szero>
 1f8:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__fp_nan>

000001fc <__divsf3x>:
 1fc:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__fp_split3>
 200:	68 f3       	brcs	.-38     	; 0x1dc <__divsf3+0x8>

00000202 <__divsf3_pse>:
 202:	99 23       	and	r25, r25
 204:	b1 f3       	breq	.-20     	; 0x1f2 <__divsf3+0x1e>
 206:	55 23       	and	r21, r21
 208:	91 f3       	breq	.-28     	; 0x1ee <__divsf3+0x1a>
 20a:	95 1b       	sub	r25, r21
 20c:	55 0b       	sbc	r21, r21
 20e:	bb 27       	eor	r27, r27
 210:	aa 27       	eor	r26, r26
 212:	62 17       	cp	r22, r18
 214:	73 07       	cpc	r23, r19
 216:	84 07       	cpc	r24, r20
 218:	38 f0       	brcs	.+14     	; 0x228 <__divsf3_pse+0x26>
 21a:	9f 5f       	subi	r25, 0xFF	; 255
 21c:	5f 4f       	sbci	r21, 0xFF	; 255
 21e:	22 0f       	add	r18, r18
 220:	33 1f       	adc	r19, r19
 222:	44 1f       	adc	r20, r20
 224:	aa 1f       	adc	r26, r26
 226:	a9 f3       	breq	.-22     	; 0x212 <__divsf3_pse+0x10>
 228:	35 d0       	rcall	.+106    	; 0x294 <__divsf3_pse+0x92>
 22a:	0e 2e       	mov	r0, r30
 22c:	3a f0       	brmi	.+14     	; 0x23c <__divsf3_pse+0x3a>
 22e:	e0 e8       	ldi	r30, 0x80	; 128
 230:	32 d0       	rcall	.+100    	; 0x296 <__divsf3_pse+0x94>
 232:	91 50       	subi	r25, 0x01	; 1
 234:	50 40       	sbci	r21, 0x00	; 0
 236:	e6 95       	lsr	r30
 238:	00 1c       	adc	r0, r0
 23a:	ca f7       	brpl	.-14     	; 0x22e <__divsf3_pse+0x2c>
 23c:	2b d0       	rcall	.+86     	; 0x294 <__divsf3_pse+0x92>
 23e:	fe 2f       	mov	r31, r30
 240:	29 d0       	rcall	.+82     	; 0x294 <__divsf3_pse+0x92>
 242:	66 0f       	add	r22, r22
 244:	77 1f       	adc	r23, r23
 246:	88 1f       	adc	r24, r24
 248:	bb 1f       	adc	r27, r27
 24a:	26 17       	cp	r18, r22
 24c:	37 07       	cpc	r19, r23
 24e:	48 07       	cpc	r20, r24
 250:	ab 07       	cpc	r26, r27
 252:	b0 e8       	ldi	r27, 0x80	; 128
 254:	09 f0       	breq	.+2      	; 0x258 <__divsf3_pse+0x56>
 256:	bb 0b       	sbc	r27, r27
 258:	80 2d       	mov	r24, r0
 25a:	bf 01       	movw	r22, r30
 25c:	ff 27       	eor	r31, r31
 25e:	93 58       	subi	r25, 0x83	; 131
 260:	5f 4f       	sbci	r21, 0xFF	; 255
 262:	3a f0       	brmi	.+14     	; 0x272 <__divsf3_pse+0x70>
 264:	9e 3f       	cpi	r25, 0xFE	; 254
 266:	51 05       	cpc	r21, r1
 268:	78 f0       	brcs	.+30     	; 0x288 <__divsf3_pse+0x86>
 26a:	0c 94 c8 01 	jmp	0x390	; 0x390 <__fp_inf>
 26e:	0c 94 13 02 	jmp	0x426	; 0x426 <__fp_szero>
 272:	5f 3f       	cpi	r21, 0xFF	; 255
 274:	e4 f3       	brlt	.-8      	; 0x26e <__divsf3_pse+0x6c>
 276:	98 3e       	cpi	r25, 0xE8	; 232
 278:	d4 f3       	brlt	.-12     	; 0x26e <__divsf3_pse+0x6c>
 27a:	86 95       	lsr	r24
 27c:	77 95       	ror	r23
 27e:	67 95       	ror	r22
 280:	b7 95       	ror	r27
 282:	f7 95       	ror	r31
 284:	9f 5f       	subi	r25, 0xFF	; 255
 286:	c9 f7       	brne	.-14     	; 0x27a <__divsf3_pse+0x78>
 288:	88 0f       	add	r24, r24
 28a:	91 1d       	adc	r25, r1
 28c:	96 95       	lsr	r25
 28e:	87 95       	ror	r24
 290:	97 f9       	bld	r25, 7
 292:	08 95       	ret
 294:	e1 e0       	ldi	r30, 0x01	; 1
 296:	66 0f       	add	r22, r22
 298:	77 1f       	adc	r23, r23
 29a:	88 1f       	adc	r24, r24
 29c:	bb 1f       	adc	r27, r27
 29e:	62 17       	cp	r22, r18
 2a0:	73 07       	cpc	r23, r19
 2a2:	84 07       	cpc	r24, r20
 2a4:	ba 07       	cpc	r27, r26
 2a6:	20 f0       	brcs	.+8      	; 0x2b0 <__divsf3_pse+0xae>
 2a8:	62 1b       	sub	r22, r18
 2aa:	73 0b       	sbc	r23, r19
 2ac:	84 0b       	sbc	r24, r20
 2ae:	ba 0b       	sbc	r27, r26
 2b0:	ee 1f       	adc	r30, r30
 2b2:	88 f7       	brcc	.-30     	; 0x296 <__divsf3_pse+0x94>
 2b4:	e0 95       	com	r30
 2b6:	08 95       	ret

000002b8 <__fixunssfsi>:
 2b8:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__fp_splitA>
 2bc:	88 f0       	brcs	.+34     	; 0x2e0 <__fixunssfsi+0x28>
 2be:	9f 57       	subi	r25, 0x7F	; 127
 2c0:	98 f0       	brcs	.+38     	; 0x2e8 <__fixunssfsi+0x30>
 2c2:	b9 2f       	mov	r27, r25
 2c4:	99 27       	eor	r25, r25
 2c6:	b7 51       	subi	r27, 0x17	; 23
 2c8:	b0 f0       	brcs	.+44     	; 0x2f6 <__fixunssfsi+0x3e>
 2ca:	e1 f0       	breq	.+56     	; 0x304 <__fixunssfsi+0x4c>
 2cc:	66 0f       	add	r22, r22
 2ce:	77 1f       	adc	r23, r23
 2d0:	88 1f       	adc	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	1a f0       	brmi	.+6      	; 0x2dc <__fixunssfsi+0x24>
 2d6:	ba 95       	dec	r27
 2d8:	c9 f7       	brne	.-14     	; 0x2cc <__fixunssfsi+0x14>
 2da:	14 c0       	rjmp	.+40     	; 0x304 <__fixunssfsi+0x4c>
 2dc:	b1 30       	cpi	r27, 0x01	; 1
 2de:	91 f0       	breq	.+36     	; 0x304 <__fixunssfsi+0x4c>
 2e0:	0e 94 12 02 	call	0x424	; 0x424 <__fp_zero>
 2e4:	b1 e0       	ldi	r27, 0x01	; 1
 2e6:	08 95       	ret
 2e8:	0c 94 12 02 	jmp	0x424	; 0x424 <__fp_zero>
 2ec:	67 2f       	mov	r22, r23
 2ee:	78 2f       	mov	r23, r24
 2f0:	88 27       	eor	r24, r24
 2f2:	b8 5f       	subi	r27, 0xF8	; 248
 2f4:	39 f0       	breq	.+14     	; 0x304 <__fixunssfsi+0x4c>
 2f6:	b9 3f       	cpi	r27, 0xF9	; 249
 2f8:	cc f3       	brlt	.-14     	; 0x2ec <__fixunssfsi+0x34>
 2fa:	86 95       	lsr	r24
 2fc:	77 95       	ror	r23
 2fe:	67 95       	ror	r22
 300:	b3 95       	inc	r27
 302:	d9 f7       	brne	.-10     	; 0x2fa <__fixunssfsi+0x42>
 304:	3e f4       	brtc	.+14     	; 0x314 <__fixunssfsi+0x5c>
 306:	90 95       	com	r25
 308:	80 95       	com	r24
 30a:	70 95       	com	r23
 30c:	61 95       	neg	r22
 30e:	7f 4f       	sbci	r23, 0xFF	; 255
 310:	8f 4f       	sbci	r24, 0xFF	; 255
 312:	9f 4f       	sbci	r25, 0xFF	; 255
 314:	08 95       	ret

00000316 <__floatunsisf>:
 316:	e8 94       	clt
 318:	09 c0       	rjmp	.+18     	; 0x32c <__floatsisf+0x12>

0000031a <__floatsisf>:
 31a:	97 fb       	bst	r25, 7
 31c:	3e f4       	brtc	.+14     	; 0x32c <__floatsisf+0x12>
 31e:	90 95       	com	r25
 320:	80 95       	com	r24
 322:	70 95       	com	r23
 324:	61 95       	neg	r22
 326:	7f 4f       	sbci	r23, 0xFF	; 255
 328:	8f 4f       	sbci	r24, 0xFF	; 255
 32a:	9f 4f       	sbci	r25, 0xFF	; 255
 32c:	99 23       	and	r25, r25
 32e:	a9 f0       	breq	.+42     	; 0x35a <__floatsisf+0x40>
 330:	f9 2f       	mov	r31, r25
 332:	96 e9       	ldi	r25, 0x96	; 150
 334:	bb 27       	eor	r27, r27
 336:	93 95       	inc	r25
 338:	f6 95       	lsr	r31
 33a:	87 95       	ror	r24
 33c:	77 95       	ror	r23
 33e:	67 95       	ror	r22
 340:	b7 95       	ror	r27
 342:	f1 11       	cpse	r31, r1
 344:	f8 cf       	rjmp	.-16     	; 0x336 <__floatsisf+0x1c>
 346:	fa f4       	brpl	.+62     	; 0x386 <__floatsisf+0x6c>
 348:	bb 0f       	add	r27, r27
 34a:	11 f4       	brne	.+4      	; 0x350 <__floatsisf+0x36>
 34c:	60 ff       	sbrs	r22, 0
 34e:	1b c0       	rjmp	.+54     	; 0x386 <__floatsisf+0x6c>
 350:	6f 5f       	subi	r22, 0xFF	; 255
 352:	7f 4f       	sbci	r23, 0xFF	; 255
 354:	8f 4f       	sbci	r24, 0xFF	; 255
 356:	9f 4f       	sbci	r25, 0xFF	; 255
 358:	16 c0       	rjmp	.+44     	; 0x386 <__floatsisf+0x6c>
 35a:	88 23       	and	r24, r24
 35c:	11 f0       	breq	.+4      	; 0x362 <__floatsisf+0x48>
 35e:	96 e9       	ldi	r25, 0x96	; 150
 360:	11 c0       	rjmp	.+34     	; 0x384 <__floatsisf+0x6a>
 362:	77 23       	and	r23, r23
 364:	21 f0       	breq	.+8      	; 0x36e <__floatsisf+0x54>
 366:	9e e8       	ldi	r25, 0x8E	; 142
 368:	87 2f       	mov	r24, r23
 36a:	76 2f       	mov	r23, r22
 36c:	05 c0       	rjmp	.+10     	; 0x378 <__floatsisf+0x5e>
 36e:	66 23       	and	r22, r22
 370:	71 f0       	breq	.+28     	; 0x38e <__floatsisf+0x74>
 372:	96 e8       	ldi	r25, 0x86	; 134
 374:	86 2f       	mov	r24, r22
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	60 e0       	ldi	r22, 0x00	; 0
 37a:	2a f0       	brmi	.+10     	; 0x386 <__floatsisf+0x6c>
 37c:	9a 95       	dec	r25
 37e:	66 0f       	add	r22, r22
 380:	77 1f       	adc	r23, r23
 382:	88 1f       	adc	r24, r24
 384:	da f7       	brpl	.-10     	; 0x37c <__floatsisf+0x62>
 386:	88 0f       	add	r24, r24
 388:	96 95       	lsr	r25
 38a:	87 95       	ror	r24
 38c:	97 f9       	bld	r25, 7
 38e:	08 95       	ret

00000390 <__fp_inf>:
 390:	97 f9       	bld	r25, 7
 392:	9f 67       	ori	r25, 0x7F	; 127
 394:	80 e8       	ldi	r24, 0x80	; 128
 396:	70 e0       	ldi	r23, 0x00	; 0
 398:	60 e0       	ldi	r22, 0x00	; 0
 39a:	08 95       	ret

0000039c <__fp_nan>:
 39c:	9f ef       	ldi	r25, 0xFF	; 255
 39e:	80 ec       	ldi	r24, 0xC0	; 192
 3a0:	08 95       	ret

000003a2 <__fp_pscA>:
 3a2:	00 24       	eor	r0, r0
 3a4:	0a 94       	dec	r0
 3a6:	16 16       	cp	r1, r22
 3a8:	17 06       	cpc	r1, r23
 3aa:	18 06       	cpc	r1, r24
 3ac:	09 06       	cpc	r0, r25
 3ae:	08 95       	ret

000003b0 <__fp_pscB>:
 3b0:	00 24       	eor	r0, r0
 3b2:	0a 94       	dec	r0
 3b4:	12 16       	cp	r1, r18
 3b6:	13 06       	cpc	r1, r19
 3b8:	14 06       	cpc	r1, r20
 3ba:	05 06       	cpc	r0, r21
 3bc:	08 95       	ret

000003be <__fp_round>:
 3be:	09 2e       	mov	r0, r25
 3c0:	03 94       	inc	r0
 3c2:	00 0c       	add	r0, r0
 3c4:	11 f4       	brne	.+4      	; 0x3ca <__fp_round+0xc>
 3c6:	88 23       	and	r24, r24
 3c8:	52 f0       	brmi	.+20     	; 0x3de <__fp_round+0x20>
 3ca:	bb 0f       	add	r27, r27
 3cc:	40 f4       	brcc	.+16     	; 0x3de <__fp_round+0x20>
 3ce:	bf 2b       	or	r27, r31
 3d0:	11 f4       	brne	.+4      	; 0x3d6 <__fp_round+0x18>
 3d2:	60 ff       	sbrs	r22, 0
 3d4:	04 c0       	rjmp	.+8      	; 0x3de <__fp_round+0x20>
 3d6:	6f 5f       	subi	r22, 0xFF	; 255
 3d8:	7f 4f       	sbci	r23, 0xFF	; 255
 3da:	8f 4f       	sbci	r24, 0xFF	; 255
 3dc:	9f 4f       	sbci	r25, 0xFF	; 255
 3de:	08 95       	ret

000003e0 <__fp_split3>:
 3e0:	57 fd       	sbrc	r21, 7
 3e2:	90 58       	subi	r25, 0x80	; 128
 3e4:	44 0f       	add	r20, r20
 3e6:	55 1f       	adc	r21, r21
 3e8:	59 f0       	breq	.+22     	; 0x400 <__LOCK_REGION_LENGTH__>
 3ea:	5f 3f       	cpi	r21, 0xFF	; 255
 3ec:	71 f0       	breq	.+28     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ee:	47 95       	ror	r20

000003f0 <__fp_splitA>:
 3f0:	88 0f       	add	r24, r24
 3f2:	97 fb       	bst	r25, 7
 3f4:	99 1f       	adc	r25, r25
 3f6:	61 f0       	breq	.+24     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f8:	9f 3f       	cpi	r25, 0xFF	; 255
 3fa:	79 f0       	breq	.+30     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3fc:	87 95       	ror	r24
 3fe:	08 95       	ret
 400:	12 16       	cp	r1, r18
 402:	13 06       	cpc	r1, r19
 404:	14 06       	cpc	r1, r20
 406:	55 1f       	adc	r21, r21
 408:	f2 cf       	rjmp	.-28     	; 0x3ee <__fp_split3+0xe>
 40a:	46 95       	lsr	r20
 40c:	f1 df       	rcall	.-30     	; 0x3f0 <__fp_splitA>
 40e:	08 c0       	rjmp	.+16     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 410:	16 16       	cp	r1, r22
 412:	17 06       	cpc	r1, r23
 414:	18 06       	cpc	r1, r24
 416:	99 1f       	adc	r25, r25
 418:	f1 cf       	rjmp	.-30     	; 0x3fc <__fp_splitA+0xc>
 41a:	86 95       	lsr	r24
 41c:	71 05       	cpc	r23, r1
 41e:	61 05       	cpc	r22, r1
 420:	08 94       	sec
 422:	08 95       	ret

00000424 <__fp_zero>:
 424:	e8 94       	clt

00000426 <__fp_szero>:
 426:	bb 27       	eor	r27, r27
 428:	66 27       	eor	r22, r22
 42a:	77 27       	eor	r23, r23
 42c:	cb 01       	movw	r24, r22
 42e:	97 f9       	bld	r25, 7
 430:	08 95       	ret

00000432 <_exit>:
 432:	f8 94       	cli

00000434 <__stop_program>:
 434:	ff cf       	rjmp	.-2      	; 0x434 <__stop_program>
