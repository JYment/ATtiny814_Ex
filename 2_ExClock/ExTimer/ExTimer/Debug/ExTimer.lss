
ExTimer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803e00  00803e00  000000ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000098  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000000ec  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000011c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000158  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000021ec  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000155a  00000000  00000000  0000236c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000271  00000000  00000000  000038c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  00003b38  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001048  00000000  00000000  00003b88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000056  00000000  00000000  00004bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00004c26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	20 c0       	rjmp	.+64     	; 0x44 <__bad_interrupt>
   4:	1f c0       	rjmp	.+62     	; 0x44 <__bad_interrupt>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__bad_interrupt>
   8:	1d c0       	rjmp	.+58     	; 0x44 <__bad_interrupt>
   a:	1c c0       	rjmp	.+56     	; 0x44 <__bad_interrupt>
   c:	1b c0       	rjmp	.+54     	; 0x44 <__bad_interrupt>
   e:	1a c0       	rjmp	.+52     	; 0x44 <__bad_interrupt>
  10:	1a c0       	rjmp	.+52     	; 0x46 <__vector_8>
  12:	18 c0       	rjmp	.+48     	; 0x44 <__bad_interrupt>
  14:	17 c0       	rjmp	.+46     	; 0x44 <__bad_interrupt>
  16:	16 c0       	rjmp	.+44     	; 0x44 <__bad_interrupt>
  18:	15 c0       	rjmp	.+42     	; 0x44 <__bad_interrupt>
  1a:	14 c0       	rjmp	.+40     	; 0x44 <__bad_interrupt>
  1c:	13 c0       	rjmp	.+38     	; 0x44 <__bad_interrupt>
  1e:	12 c0       	rjmp	.+36     	; 0x44 <__bad_interrupt>
  20:	11 c0       	rjmp	.+34     	; 0x44 <__bad_interrupt>
  22:	10 c0       	rjmp	.+32     	; 0x44 <__bad_interrupt>
  24:	0f c0       	rjmp	.+30     	; 0x44 <__bad_interrupt>
  26:	0e c0       	rjmp	.+28     	; 0x44 <__bad_interrupt>
  28:	0d c0       	rjmp	.+26     	; 0x44 <__bad_interrupt>
  2a:	0c c0       	rjmp	.+24     	; 0x44 <__bad_interrupt>
  2c:	0b c0       	rjmp	.+22     	; 0x44 <__bad_interrupt>
  2e:	0a c0       	rjmp	.+20     	; 0x44 <__bad_interrupt>
  30:	09 c0       	rjmp	.+18     	; 0x44 <__bad_interrupt>
  32:	08 c0       	rjmp	.+16     	; 0x44 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62
  40:	1a d0       	rcall	.+52     	; 0x76 <main>
  42:	28 c0       	rjmp	.+80     	; 0x94 <_exit>

00000044 <__bad_interrupt>:
  44:	dd cf       	rjmp	.-70     	; 0x0 <__vectors>

00000046 <__vector_8>:
#include <avr/interrupt.h>

#define TERM		500

ISR(TCA0_OVF_vect)
{
  46:	1f 92       	push	r1
  48:	0f 92       	push	r0
  4a:	0f b6       	in	r0, 0x3f	; 63
  4c:	0f 92       	push	r0
  4e:	11 24       	eor	r1, r1
  50:	8f 93       	push	r24
  52:	ef 93       	push	r30
  54:	ff 93       	push	r31
	PORTA_OUTTGL = _BV(3);
  56:	88 e0       	ldi	r24, 0x08	; 8
  58:	80 93 07 04 	sts	0x0407, r24	; 0x800407 <__TEXT_REGION_LENGTH__+0x700407>
	TCA0.SINGLE.INTFLAGS |= TCA_SINGLE_OVF_bm;
  5c:	e0 e0       	ldi	r30, 0x00	; 0
  5e:	fa e0       	ldi	r31, 0x0A	; 10
  60:	83 85       	ldd	r24, Z+11	; 0x0b
  62:	81 60       	ori	r24, 0x01	; 1
  64:	83 87       	std	Z+11, r24	; 0x0b
}
  66:	ff 91       	pop	r31
  68:	ef 91       	pop	r30
  6a:	8f 91       	pop	r24
  6c:	0f 90       	pop	r0
  6e:	0f be       	out	0x3f, r0	; 63
  70:	0f 90       	pop	r0
  72:	1f 90       	pop	r1
  74:	18 95       	reti

00000076 <main>:


int main(void)
{
    PORTA.DIRSET = _BV(3);
  76:	88 e0       	ldi	r24, 0x08	; 8
  78:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <__TEXT_REGION_LENGTH__+0x700401>
	TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
  7c:	e0 e0       	ldi	r30, 0x00	; 0
  7e:	fa e0       	ldi	r31, 0x0A	; 10
  80:	81 e0       	ldi	r24, 0x01	; 1
  82:	82 87       	std	Z+10, r24	; 0x0a
	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV1024_gc | TCA_SINGLE_ENABLE_bm;
  84:	8f e0       	ldi	r24, 0x0F	; 15
  86:	80 83       	st	Z, r24
	TCA0.SINGLE.PER = (uint16_t) (((F_CPU / 1000) * TERM) / 1024 - 1);
  88:	8a e5       	ldi	r24, 0x5A	; 90
  8a:	96 e0       	ldi	r25, 0x06	; 6
  8c:	86 a3       	std	Z+38, r24	; 0x26
  8e:	97 a3       	std	Z+39, r25	; 0x27
	
	sei();
  90:	78 94       	sei
  92:	ff cf       	rjmp	.-2      	; 0x92 <main+0x1c>

00000094 <_exit>:
  94:	f8 94       	cli

00000096 <__stop_program>:
  96:	ff cf       	rjmp	.-2      	; 0x96 <__stop_program>
