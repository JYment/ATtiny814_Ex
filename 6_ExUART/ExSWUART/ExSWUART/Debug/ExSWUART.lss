
ExSWUART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00803e00  000007d9  0000088d  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007c8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000011  000087c8  000007c8  0000087c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000000e  00803e0e  00803e0e  0000089b  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  0000089b  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008f8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000088  00000000  00000000  00000934  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001f1e  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000017ab  00000000  00000000  000028da  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000061e  00000000  00000000  00004085  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000128  00000000  00000000  000046a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000cf8  00000000  00000000  000047cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000049d  00000000  00000000  000054c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000068  00000000  00000000  00005961  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62

00000040 <__do_copy_data>:
  40:	1e e3       	ldi	r17, 0x3E	; 62
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	be e3       	ldi	r27, 0x3E	; 62
  46:	e9 ed       	ldi	r30, 0xD9	; 217
  48:	f7 e0       	ldi	r31, 0x07	; 7
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	ae 30       	cpi	r26, 0x0E	; 14
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	2e e3       	ldi	r18, 0x3E	; 62
  58:	ae e0       	ldi	r26, 0x0E	; 14
  5a:	be e3       	ldi	r27, 0x3E	; 62
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	ac 31       	cpi	r26, 0x1C	; 28
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	02 d0       	rcall	.+4      	; 0x6c <main>
  68:	ad c3       	rjmp	.+1882   	; 0x7c4 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <main>:

int main(void)
{
    int16_t c;
	
	init_uart((volatile uint8_t *) &PORTA, 3, 1);		// TX PORT : A3
  6c:	41 e0       	ldi	r20, 0x01	; 1
  6e:	63 e0       	ldi	r22, 0x03	; 3
  70:	80 e0       	ldi	r24, 0x00	; 0
  72:	94 e0       	ldi	r25, 0x04	; 4
  74:	2b d0       	rcall	.+86     	; 0xcc <init_uart>
	init_uart((volatile uint8_t *) &PORTA, 6, 0);		// RX PORT : A6
  76:	40 e0       	ldi	r20, 0x00	; 0
  78:	66 e0       	ldi	r22, 0x06	; 6
  7a:	80 e0       	ldi	r24, 0x00	; 0
  7c:	94 e0       	ldi	r25, 0x04	; 4
  7e:	26 d0       	rcall	.+76     	; 0xcc <init_uart>
	
	puts("ABCDE\r\n");
  80:	88 ec       	ldi	r24, 0xC8	; 200
  82:	97 e8       	ldi	r25, 0x87	; 135
  84:	bc d0       	rcall	.+376    	; 0x1fe <puts>
	printf("i : %d\r\n", 1234);
  86:	84 e0       	ldi	r24, 0x04	; 4
  88:	8f 93       	push	r24
  8a:	82 ed       	ldi	r24, 0xD2	; 210
  8c:	8f 93       	push	r24
  8e:	80 ed       	ldi	r24, 0xD0	; 208
  90:	97 e8       	ldi	r25, 0x87	; 135
  92:	9f 93       	push	r25
  94:	8f 93       	push	r24
  96:	a0 d0       	rcall	.+320    	; 0x1d8 <printf>
  98:	0f 90       	pop	r0
  9a:	0f 90       	pop	r0
  9c:	0f 90       	pop	r0
  9e:	0f 90       	pop	r0
	
	while(1)
	{
		do
		{
			c = getch();
  a0:	4e d0       	rcall	.+156    	; 0x13e <getch>
		}
		while(c == -1);
  a2:	8f 3f       	cpi	r24, 0xFF	; 255
  a4:	2f ef       	ldi	r18, 0xFF	; 255
  a6:	92 07       	cpc	r25, r18
  a8:	d9 f3       	breq	.-10     	; 0xa0 <main+0x34>
		if(c != '\r')	c++;
  aa:	8d 30       	cpi	r24, 0x0D	; 13
  ac:	91 05       	cpc	r25, r1
  ae:	51 f0       	breq	.+20     	; 0xc4 <main+0x58>
  b0:	ec 01       	movw	r28, r24
  b2:	21 96       	adiw	r28, 0x01	; 1
		putch(c);
  b4:	ce 01       	movw	r24, r28
  b6:	71 d0       	rcall	.+226    	; 0x19a <putch>
		if(c == '\r')	putch('\n');
  b8:	2d 97       	sbiw	r28, 0x0d	; 13
  ba:	91 f7       	brne	.-28     	; 0xa0 <main+0x34>
  bc:	8a e0       	ldi	r24, 0x0A	; 10
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	6c d0       	rcall	.+216    	; 0x19a <putch>
  c2:	ee cf       	rjmp	.-36     	; 0xa0 <main+0x34>
		{
			c = getch();
		}
		while(c == -1);
		if(c != '\r')	c++;
		putch(c);
  c4:	8d e0       	ldi	r24, 0x0D	; 13
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	68 d0       	rcall	.+208    	; 0x19a <putch>
  ca:	f8 cf       	rjmp	.-16     	; 0xbc <main+0x50>

000000cc <init_uart>:
}uart_tx, uart_rx;


void init_uart(volatile uint8_t *port, uint8_t pin_bp, int8_t tx)
{
	if(tx)
  cc:	44 23       	and	r20, r20
  ce:	a1 f0       	breq	.+40     	; 0xf8 <init_uart+0x2c>
	{
		uart_tx.port		= port;
  d0:	e2 e1       	ldi	r30, 0x12	; 18
  d2:	fe e3       	ldi	r31, 0x3E	; 62
  d4:	80 83       	st	Z, r24
  d6:	91 83       	std	Z+1, r25	; 0x01
		uart_tx.pin_bp		= pin_bp;
  d8:	62 83       	std	Z+2, r22	; 0x02
		uart_tx.pin_bm		= _BV(pin_bp);
  da:	21 e0       	ldi	r18, 0x01	; 1
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	02 c0       	rjmp	.+4      	; 0xe4 <init_uart+0x18>
  e0:	22 0f       	add	r18, r18
  e2:	33 1f       	adc	r19, r19
  e4:	6a 95       	dec	r22
  e6:	e2 f7       	brpl	.-8      	; 0xe0 <init_uart+0x14>
  e8:	23 83       	std	Z+3, r18	; 0x03
		*(port + 1)			= _BV(pin_bp);		// DIRSET
  ea:	dc 01       	movw	r26, r24
  ec:	11 96       	adiw	r26, 0x01	; 1
  ee:	2c 93       	st	X, r18
  f0:	11 97       	sbiw	r26, 0x01	; 1
		*(port + 5)			= _BV(pin_bp);		// OUTSET
  f2:	15 96       	adiw	r26, 0x05	; 5
  f4:	2c 93       	st	X, r18
  f6:	1c c0       	rjmp	.+56     	; 0x130 <init_uart+0x64>
	}
	else
	{
		uart_rx.port		= port;
  f8:	ae e0       	ldi	r26, 0x0E	; 14
  fa:	be e3       	ldi	r27, 0x3E	; 62
  fc:	8d 93       	st	X+, r24
  fe:	9c 93       	st	X, r25
 100:	11 97       	sbiw	r26, 0x01	; 1
		uart_rx.pin_bp		= pin_bp;
 102:	12 96       	adiw	r26, 0x02	; 2
 104:	6c 93       	st	X, r22
 106:	12 97       	sbiw	r26, 0x02	; 2
		uart_rx.pin_bm		= _BV(pin_bp);
 108:	e6 2f       	mov	r30, r22
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	21 e0       	ldi	r18, 0x01	; 1
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	02 c0       	rjmp	.+4      	; 0x116 <init_uart+0x4a>
 112:	22 0f       	add	r18, r18
 114:	33 1f       	adc	r19, r19
 116:	6a 95       	dec	r22
 118:	e2 f7       	brpl	.-8      	; 0x112 <init_uart+0x46>
 11a:	13 96       	adiw	r26, 0x03	; 3
 11c:	2c 93       	st	X, r18
		*(port + 2)			= _BV(pin_bp);		// DIRCLR
 11e:	dc 01       	movw	r26, r24
 120:	12 96       	adiw	r26, 0x02	; 2
 122:	2c 93       	st	X, r18
		*(port + 0x10 + pin_bp)		|= PORT_PULLUPEN_bm;		// PINCTRLn
 124:	70 96       	adiw	r30, 0x10	; 16
 126:	e8 0f       	add	r30, r24
 128:	f9 1f       	adc	r31, r25
 12a:	80 81       	ld	r24, Z
 12c:	88 60       	ori	r24, 0x08	; 8
 12e:	80 83       	st	Z, r24
	}
	
	#ifdef USE_PRINTF
	#if defined(__GNUC__)
	stdout = &UART_SW_stream;
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	9e e3       	ldi	r25, 0x3E	; 62
 134:	80 93 18 3e 	sts	0x3E18, r24	; 0x803e18 <__iob+0x2>
 138:	90 93 19 3e 	sts	0x3E19, r25	; 0x803e19 <__iob+0x3>
 13c:	08 95       	ret

0000013e <getch>:

int16_t getch(void)
{
	uint8_t i, c;
	
	if((*(uart_rx.port + 8) & uart_rx.pin_bm) != 0)		return -1;		// 신호가 없음
 13e:	ee e0       	ldi	r30, 0x0E	; 14
 140:	fe e3       	ldi	r31, 0x3E	; 62
 142:	a0 81       	ld	r26, Z
 144:	b1 81       	ldd	r27, Z+1	; 0x01
 146:	18 96       	adiw	r26, 0x08	; 8
 148:	9c 91       	ld	r25, X
 14a:	83 81       	ldd	r24, Z+3	; 0x03
 14c:	89 23       	and	r24, r25
 14e:	f9 f4       	brne	.+62     	; 0x18e <getch+0x50>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 150:	84 ea       	ldi	r24, 0xA4	; 164
 152:	8a 95       	dec	r24
 154:	f1 f7       	brne	.-4      	; 0x152 <getch+0x14>
 156:	00 c0       	rjmp	.+0      	; 0x158 <getch+0x1a>
 158:	28 e0       	ldi	r18, 0x08	; 8
	_delay_us(BIT_USEC + BIT_USEC/2);
	
	c = 0;
 15a:	80 e0       	ldi	r24, 0x00	; 0
	for(i=0; i<8; i++)
	{
		c >>= 1;
 15c:	86 95       	lsr	r24
		if((*(uart_rx.port + 8) & uart_rx.pin_bm) != 0)		c |= 0x80;
 15e:	a0 81       	ld	r26, Z
 160:	b1 81       	ldd	r27, Z+1	; 0x01
 162:	18 96       	adiw	r26, 0x08	; 8
 164:	3c 91       	ld	r19, X
 166:	93 81       	ldd	r25, Z+3	; 0x03
 168:	93 23       	and	r25, r19
 16a:	09 f0       	breq	.+2      	; 0x16e <getch+0x30>
 16c:	80 68       	ori	r24, 0x80	; 128
 16e:	9e e6       	ldi	r25, 0x6E	; 110
 170:	9a 95       	dec	r25
 172:	f1 f7       	brne	.-4      	; 0x170 <getch+0x32>
 174:	21 50       	subi	r18, 0x01	; 1
	
	if((*(uart_rx.port + 8) & uart_rx.pin_bm) != 0)		return -1;		// 신호가 없음
	_delay_us(BIT_USEC + BIT_USEC/2);
	
	c = 0;
	for(i=0; i<8; i++)
 176:	91 f7       	brne	.-28     	; 0x15c <getch+0x1e>
		c >>= 1;
		if((*(uart_rx.port + 8) & uart_rx.pin_bm) != 0)		c |= 0x80;
		_delay_us(BIT_USEC);
	}
	
	if((*(uart_rx.port + 8) & uart_rx.pin_bm) == 0)		return -1;		// 스탑비트가 없음
 178:	ee e0       	ldi	r30, 0x0E	; 14
 17a:	fe e3       	ldi	r31, 0x3E	; 62
 17c:	a0 81       	ld	r26, Z
 17e:	b1 81       	ldd	r27, Z+1	; 0x01
 180:	18 96       	adiw	r26, 0x08	; 8
 182:	2c 91       	ld	r18, X
 184:	93 81       	ldd	r25, Z+3	; 0x03
 186:	92 23       	and	r25, r18
 188:	29 f0       	breq	.+10     	; 0x194 <getch+0x56>
	// 스탑비트가 끝나길 기다리지 않는 것이 맞다
	// 끝날 때까지 기다리면 다음 입력 받기에 차질이 생길 수 있다
	// _delay_us(BIT_USEC/2);
	
	return (int16_t) c;
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	08 95       	ret

int16_t getch(void)
{
	uint8_t i, c;
	
	if((*(uart_rx.port + 8) & uart_rx.pin_bm) != 0)		return -1;		// 신호가 없음
 18e:	8f ef       	ldi	r24, 0xFF	; 255
 190:	9f ef       	ldi	r25, 0xFF	; 255
 192:	08 95       	ret
		c >>= 1;
		if((*(uart_rx.port + 8) & uart_rx.pin_bm) != 0)		c |= 0x80;
		_delay_us(BIT_USEC);
	}
	
	if((*(uart_rx.port + 8) & uart_rx.pin_bm) == 0)		return -1;		// 스탑비트가 없음
 194:	8f ef       	ldi	r24, 0xFF	; 255
 196:	9f ef       	ldi	r25, 0xFF	; 255
	// 스탑비트가 끝나길 기다리지 않는 것이 맞다
	// 끝날 때까지 기다리면 다음 입력 받기에 차질이 생길 수 있다
	// _delay_us(BIT_USEC/2);
	
	return (int16_t) c;
}
 198:	08 95       	ret

0000019a <putch>:


void putch(int16_t c)
{
	for(c=(c<<1)|512; c!=0; c=c>>1)
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	92 60       	ori	r25, 0x02	; 2
	{
		if(c&1)		*(uart_tx.port + 5) = uart_tx.pin_bm;
		else		*(uart_tx.port + 6) = uart_tx.pin_bm;
 1a0:	e2 e1       	ldi	r30, 0x12	; 18
 1a2:	fe e3       	ldi	r31, 0x3E	; 62

void putch(int16_t c)
{
	for(c=(c<<1)|512; c!=0; c=c>>1)
	{
		if(c&1)		*(uart_tx.port + 5) = uart_tx.pin_bm;
 1a4:	80 ff       	sbrs	r24, 0
 1a6:	06 c0       	rjmp	.+12     	; 0x1b4 <putch+0x1a>
 1a8:	a0 81       	ld	r26, Z
 1aa:	b1 81       	ldd	r27, Z+1	; 0x01
 1ac:	23 81       	ldd	r18, Z+3	; 0x03
 1ae:	15 96       	adiw	r26, 0x05	; 5
 1b0:	2c 93       	st	X, r18
 1b2:	05 c0       	rjmp	.+10     	; 0x1be <putch+0x24>
		else		*(uart_tx.port + 6) = uart_tx.pin_bm;
 1b4:	a0 81       	ld	r26, Z
 1b6:	b1 81       	ldd	r27, Z+1	; 0x01
 1b8:	23 81       	ldd	r18, Z+3	; 0x03
 1ba:	16 96       	adiw	r26, 0x06	; 6
 1bc:	2c 93       	st	X, r18
 1be:	2e e6       	ldi	r18, 0x6E	; 110
 1c0:	2a 95       	dec	r18
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <putch+0x26>
}


void putch(int16_t c)
{
	for(c=(c<<1)|512; c!=0; c=c>>1)
 1c4:	95 95       	asr	r25
 1c6:	87 95       	ror	r24
 1c8:	00 97       	sbiw	r24, 0x00	; 0
 1ca:	61 f7       	brne	.-40     	; 0x1a4 <putch+0xa>
	{
		if(c&1)		*(uart_tx.port + 5) = uart_tx.pin_bm;
		else		*(uart_tx.port + 6) = uart_tx.pin_bm;
		_delay_us(BIT_USEC);
	}
}
 1cc:	08 95       	ret

000001ce <UART_SW_printCHAR>:
#define USE_PRINTF
#ifdef USE_PRINTF
#if defined(__GNUC__)
int UART_SW_printCHAR(char ch, FILE *stream)
{
	putch(ch);
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	e4 df       	rcall	.-56     	; 0x19a <putch>
	return 0;
}
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	08 95       	ret

000001d8 <printf>:
 1d8:	a0 e0       	ldi	r26, 0x00	; 0
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	e1 ef       	ldi	r30, 0xF1	; 241
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	d0 c2       	rjmp	.+1440   	; 0x782 <__prologue_saves__+0x20>
 1e2:	ae 01       	movw	r20, r28
 1e4:	4b 5f       	subi	r20, 0xFB	; 251
 1e6:	5f 4f       	sbci	r21, 0xFF	; 255
 1e8:	fa 01       	movw	r30, r20
 1ea:	61 91       	ld	r22, Z+
 1ec:	71 91       	ld	r23, Z+
 1ee:	af 01       	movw	r20, r30
 1f0:	80 91 18 3e 	lds	r24, 0x3E18	; 0x803e18 <__iob+0x2>
 1f4:	90 91 19 3e 	lds	r25, 0x3E19	; 0x803e19 <__iob+0x3>
 1f8:	32 d0       	rcall	.+100    	; 0x25e <vfprintf>
 1fa:	e2 e0       	ldi	r30, 0x02	; 2
 1fc:	db c2       	rjmp	.+1462   	; 0x7b4 <__epilogue_restores__+0x20>

000001fe <puts>:
 1fe:	0f 93       	push	r16
 200:	1f 93       	push	r17
 202:	cf 93       	push	r28
 204:	df 93       	push	r29
 206:	e0 91 18 3e 	lds	r30, 0x3E18	; 0x803e18 <__iob+0x2>
 20a:	f0 91 19 3e 	lds	r31, 0x3E19	; 0x803e19 <__iob+0x3>
 20e:	23 81       	ldd	r18, Z+3	; 0x03
 210:	21 ff       	sbrs	r18, 1
 212:	1b c0       	rjmp	.+54     	; 0x24a <puts+0x4c>
 214:	8c 01       	movw	r16, r24
 216:	d0 e0       	ldi	r29, 0x00	; 0
 218:	c0 e0       	ldi	r28, 0x00	; 0
 21a:	f8 01       	movw	r30, r16
 21c:	81 91       	ld	r24, Z+
 21e:	8f 01       	movw	r16, r30
 220:	60 91 18 3e 	lds	r22, 0x3E18	; 0x803e18 <__iob+0x2>
 224:	70 91 19 3e 	lds	r23, 0x3E19	; 0x803e19 <__iob+0x3>
 228:	db 01       	movw	r26, r22
 22a:	18 96       	adiw	r26, 0x08	; 8
 22c:	ed 91       	ld	r30, X+
 22e:	fc 91       	ld	r31, X
 230:	19 97       	sbiw	r26, 0x09	; 9
 232:	88 23       	and	r24, r24
 234:	31 f0       	breq	.+12     	; 0x242 <puts+0x44>
 236:	09 95       	icall
 238:	89 2b       	or	r24, r25
 23a:	79 f3       	breq	.-34     	; 0x21a <puts+0x1c>
 23c:	df ef       	ldi	r29, 0xFF	; 255
 23e:	cf ef       	ldi	r28, 0xFF	; 255
 240:	ec cf       	rjmp	.-40     	; 0x21a <puts+0x1c>
 242:	8a e0       	ldi	r24, 0x0A	; 10
 244:	09 95       	icall
 246:	89 2b       	or	r24, r25
 248:	19 f0       	breq	.+6      	; 0x250 <puts+0x52>
 24a:	8f ef       	ldi	r24, 0xFF	; 255
 24c:	9f ef       	ldi	r25, 0xFF	; 255
 24e:	02 c0       	rjmp	.+4      	; 0x254 <puts+0x56>
 250:	8d 2f       	mov	r24, r29
 252:	9c 2f       	mov	r25, r28
 254:	df 91       	pop	r29
 256:	cf 91       	pop	r28
 258:	1f 91       	pop	r17
 25a:	0f 91       	pop	r16
 25c:	08 95       	ret

0000025e <vfprintf>:
 25e:	ab e0       	ldi	r26, 0x0B	; 11
 260:	b0 e0       	ldi	r27, 0x00	; 0
 262:	e4 e3       	ldi	r30, 0x34	; 52
 264:	f1 e0       	ldi	r31, 0x01	; 1
 266:	7d c2       	rjmp	.+1274   	; 0x762 <__prologue_saves__>
 268:	6c 01       	movw	r12, r24
 26a:	7b 01       	movw	r14, r22
 26c:	8a 01       	movw	r16, r20
 26e:	fc 01       	movw	r30, r24
 270:	16 82       	std	Z+6, r1	; 0x06
 272:	17 82       	std	Z+7, r1	; 0x07
 274:	83 81       	ldd	r24, Z+3	; 0x03
 276:	81 ff       	sbrs	r24, 1
 278:	bf c1       	rjmp	.+894    	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 27a:	ce 01       	movw	r24, r28
 27c:	01 96       	adiw	r24, 0x01	; 1
 27e:	3c 01       	movw	r6, r24
 280:	f6 01       	movw	r30, r12
 282:	93 81       	ldd	r25, Z+3	; 0x03
 284:	f7 01       	movw	r30, r14
 286:	93 fd       	sbrc	r25, 3
 288:	85 91       	lpm	r24, Z+
 28a:	93 ff       	sbrs	r25, 3
 28c:	81 91       	ld	r24, Z+
 28e:	7f 01       	movw	r14, r30
 290:	88 23       	and	r24, r24
 292:	09 f4       	brne	.+2      	; 0x296 <vfprintf+0x38>
 294:	ad c1       	rjmp	.+858    	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 296:	85 32       	cpi	r24, 0x25	; 37
 298:	39 f4       	brne	.+14     	; 0x2a8 <vfprintf+0x4a>
 29a:	93 fd       	sbrc	r25, 3
 29c:	85 91       	lpm	r24, Z+
 29e:	93 ff       	sbrs	r25, 3
 2a0:	81 91       	ld	r24, Z+
 2a2:	7f 01       	movw	r14, r30
 2a4:	85 32       	cpi	r24, 0x25	; 37
 2a6:	21 f4       	brne	.+8      	; 0x2b0 <vfprintf+0x52>
 2a8:	b6 01       	movw	r22, r12
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	c0 d1       	rcall	.+896    	; 0x62e <fputc>
 2ae:	e8 cf       	rjmp	.-48     	; 0x280 <vfprintf+0x22>
 2b0:	91 2c       	mov	r9, r1
 2b2:	21 2c       	mov	r2, r1
 2b4:	31 2c       	mov	r3, r1
 2b6:	ff e1       	ldi	r31, 0x1F	; 31
 2b8:	f3 15       	cp	r31, r3
 2ba:	d8 f0       	brcs	.+54     	; 0x2f2 <vfprintf+0x94>
 2bc:	8b 32       	cpi	r24, 0x2B	; 43
 2be:	79 f0       	breq	.+30     	; 0x2de <vfprintf+0x80>
 2c0:	38 f4       	brcc	.+14     	; 0x2d0 <vfprintf+0x72>
 2c2:	80 32       	cpi	r24, 0x20	; 32
 2c4:	79 f0       	breq	.+30     	; 0x2e4 <vfprintf+0x86>
 2c6:	83 32       	cpi	r24, 0x23	; 35
 2c8:	a1 f4       	brne	.+40     	; 0x2f2 <vfprintf+0x94>
 2ca:	23 2d       	mov	r18, r3
 2cc:	20 61       	ori	r18, 0x10	; 16
 2ce:	1d c0       	rjmp	.+58     	; 0x30a <vfprintf+0xac>
 2d0:	8d 32       	cpi	r24, 0x2D	; 45
 2d2:	61 f0       	breq	.+24     	; 0x2ec <vfprintf+0x8e>
 2d4:	80 33       	cpi	r24, 0x30	; 48
 2d6:	69 f4       	brne	.+26     	; 0x2f2 <vfprintf+0x94>
 2d8:	23 2d       	mov	r18, r3
 2da:	21 60       	ori	r18, 0x01	; 1
 2dc:	16 c0       	rjmp	.+44     	; 0x30a <vfprintf+0xac>
 2de:	83 2d       	mov	r24, r3
 2e0:	82 60       	ori	r24, 0x02	; 2
 2e2:	38 2e       	mov	r3, r24
 2e4:	e3 2d       	mov	r30, r3
 2e6:	e4 60       	ori	r30, 0x04	; 4
 2e8:	3e 2e       	mov	r3, r30
 2ea:	2a c0       	rjmp	.+84     	; 0x340 <vfprintf+0xe2>
 2ec:	f3 2d       	mov	r31, r3
 2ee:	f8 60       	ori	r31, 0x08	; 8
 2f0:	1d c0       	rjmp	.+58     	; 0x32c <vfprintf+0xce>
 2f2:	37 fc       	sbrc	r3, 7
 2f4:	2d c0       	rjmp	.+90     	; 0x350 <vfprintf+0xf2>
 2f6:	20 ed       	ldi	r18, 0xD0	; 208
 2f8:	28 0f       	add	r18, r24
 2fa:	2a 30       	cpi	r18, 0x0A	; 10
 2fc:	40 f0       	brcs	.+16     	; 0x30e <vfprintf+0xb0>
 2fe:	8e 32       	cpi	r24, 0x2E	; 46
 300:	b9 f4       	brne	.+46     	; 0x330 <vfprintf+0xd2>
 302:	36 fc       	sbrc	r3, 6
 304:	75 c1       	rjmp	.+746    	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 306:	23 2d       	mov	r18, r3
 308:	20 64       	ori	r18, 0x40	; 64
 30a:	32 2e       	mov	r3, r18
 30c:	19 c0       	rjmp	.+50     	; 0x340 <vfprintf+0xe2>
 30e:	36 fe       	sbrs	r3, 6
 310:	06 c0       	rjmp	.+12     	; 0x31e <vfprintf+0xc0>
 312:	8a e0       	ldi	r24, 0x0A	; 10
 314:	98 9e       	mul	r9, r24
 316:	20 0d       	add	r18, r0
 318:	11 24       	eor	r1, r1
 31a:	92 2e       	mov	r9, r18
 31c:	11 c0       	rjmp	.+34     	; 0x340 <vfprintf+0xe2>
 31e:	ea e0       	ldi	r30, 0x0A	; 10
 320:	2e 9e       	mul	r2, r30
 322:	20 0d       	add	r18, r0
 324:	11 24       	eor	r1, r1
 326:	22 2e       	mov	r2, r18
 328:	f3 2d       	mov	r31, r3
 32a:	f0 62       	ori	r31, 0x20	; 32
 32c:	3f 2e       	mov	r3, r31
 32e:	08 c0       	rjmp	.+16     	; 0x340 <vfprintf+0xe2>
 330:	8c 36       	cpi	r24, 0x6C	; 108
 332:	21 f4       	brne	.+8      	; 0x33c <vfprintf+0xde>
 334:	83 2d       	mov	r24, r3
 336:	80 68       	ori	r24, 0x80	; 128
 338:	38 2e       	mov	r3, r24
 33a:	02 c0       	rjmp	.+4      	; 0x340 <vfprintf+0xe2>
 33c:	88 36       	cpi	r24, 0x68	; 104
 33e:	41 f4       	brne	.+16     	; 0x350 <vfprintf+0xf2>
 340:	f7 01       	movw	r30, r14
 342:	93 fd       	sbrc	r25, 3
 344:	85 91       	lpm	r24, Z+
 346:	93 ff       	sbrs	r25, 3
 348:	81 91       	ld	r24, Z+
 34a:	7f 01       	movw	r14, r30
 34c:	81 11       	cpse	r24, r1
 34e:	b3 cf       	rjmp	.-154    	; 0x2b6 <vfprintf+0x58>
 350:	98 2f       	mov	r25, r24
 352:	9f 7d       	andi	r25, 0xDF	; 223
 354:	95 54       	subi	r25, 0x45	; 69
 356:	93 30       	cpi	r25, 0x03	; 3
 358:	28 f4       	brcc	.+10     	; 0x364 <vfprintf+0x106>
 35a:	0c 5f       	subi	r16, 0xFC	; 252
 35c:	1f 4f       	sbci	r17, 0xFF	; 255
 35e:	9f e3       	ldi	r25, 0x3F	; 63
 360:	99 83       	std	Y+1, r25	; 0x01
 362:	0d c0       	rjmp	.+26     	; 0x37e <vfprintf+0x120>
 364:	83 36       	cpi	r24, 0x63	; 99
 366:	31 f0       	breq	.+12     	; 0x374 <vfprintf+0x116>
 368:	83 37       	cpi	r24, 0x73	; 115
 36a:	71 f0       	breq	.+28     	; 0x388 <vfprintf+0x12a>
 36c:	83 35       	cpi	r24, 0x53	; 83
 36e:	09 f0       	breq	.+2      	; 0x372 <vfprintf+0x114>
 370:	55 c0       	rjmp	.+170    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 372:	20 c0       	rjmp	.+64     	; 0x3b4 <vfprintf+0x156>
 374:	f8 01       	movw	r30, r16
 376:	80 81       	ld	r24, Z
 378:	89 83       	std	Y+1, r24	; 0x01
 37a:	0e 5f       	subi	r16, 0xFE	; 254
 37c:	1f 4f       	sbci	r17, 0xFF	; 255
 37e:	88 24       	eor	r8, r8
 380:	83 94       	inc	r8
 382:	91 2c       	mov	r9, r1
 384:	53 01       	movw	r10, r6
 386:	12 c0       	rjmp	.+36     	; 0x3ac <vfprintf+0x14e>
 388:	28 01       	movw	r4, r16
 38a:	f2 e0       	ldi	r31, 0x02	; 2
 38c:	4f 0e       	add	r4, r31
 38e:	51 1c       	adc	r5, r1
 390:	f8 01       	movw	r30, r16
 392:	a0 80       	ld	r10, Z
 394:	b1 80       	ldd	r11, Z+1	; 0x01
 396:	36 fe       	sbrs	r3, 6
 398:	03 c0       	rjmp	.+6      	; 0x3a0 <vfprintf+0x142>
 39a:	69 2d       	mov	r22, r9
 39c:	70 e0       	ldi	r23, 0x00	; 0
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <vfprintf+0x146>
 3a0:	6f ef       	ldi	r22, 0xFF	; 255
 3a2:	7f ef       	ldi	r23, 0xFF	; 255
 3a4:	c5 01       	movw	r24, r10
 3a6:	38 d1       	rcall	.+624    	; 0x618 <strnlen>
 3a8:	4c 01       	movw	r8, r24
 3aa:	82 01       	movw	r16, r4
 3ac:	f3 2d       	mov	r31, r3
 3ae:	ff 77       	andi	r31, 0x7F	; 127
 3b0:	3f 2e       	mov	r3, r31
 3b2:	15 c0       	rjmp	.+42     	; 0x3de <vfprintf+0x180>
 3b4:	28 01       	movw	r4, r16
 3b6:	22 e0       	ldi	r18, 0x02	; 2
 3b8:	42 0e       	add	r4, r18
 3ba:	51 1c       	adc	r5, r1
 3bc:	f8 01       	movw	r30, r16
 3be:	a0 80       	ld	r10, Z
 3c0:	b1 80       	ldd	r11, Z+1	; 0x01
 3c2:	36 fe       	sbrs	r3, 6
 3c4:	03 c0       	rjmp	.+6      	; 0x3cc <vfprintf+0x16e>
 3c6:	69 2d       	mov	r22, r9
 3c8:	70 e0       	ldi	r23, 0x00	; 0
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <vfprintf+0x172>
 3cc:	6f ef       	ldi	r22, 0xFF	; 255
 3ce:	7f ef       	ldi	r23, 0xFF	; 255
 3d0:	c5 01       	movw	r24, r10
 3d2:	17 d1       	rcall	.+558    	; 0x602 <strnlen_P>
 3d4:	4c 01       	movw	r8, r24
 3d6:	f3 2d       	mov	r31, r3
 3d8:	f0 68       	ori	r31, 0x80	; 128
 3da:	3f 2e       	mov	r3, r31
 3dc:	82 01       	movw	r16, r4
 3de:	33 fc       	sbrc	r3, 3
 3e0:	19 c0       	rjmp	.+50     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3e2:	82 2d       	mov	r24, r2
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	88 16       	cp	r8, r24
 3e8:	99 06       	cpc	r9, r25
 3ea:	a0 f4       	brcc	.+40     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3ec:	b6 01       	movw	r22, r12
 3ee:	80 e2       	ldi	r24, 0x20	; 32
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	1d d1       	rcall	.+570    	; 0x62e <fputc>
 3f4:	2a 94       	dec	r2
 3f6:	f5 cf       	rjmp	.-22     	; 0x3e2 <vfprintf+0x184>
 3f8:	f5 01       	movw	r30, r10
 3fa:	37 fc       	sbrc	r3, 7
 3fc:	85 91       	lpm	r24, Z+
 3fe:	37 fe       	sbrs	r3, 7
 400:	81 91       	ld	r24, Z+
 402:	5f 01       	movw	r10, r30
 404:	b6 01       	movw	r22, r12
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	12 d1       	rcall	.+548    	; 0x62e <fputc>
 40a:	21 10       	cpse	r2, r1
 40c:	2a 94       	dec	r2
 40e:	21 e0       	ldi	r18, 0x01	; 1
 410:	82 1a       	sub	r8, r18
 412:	91 08       	sbc	r9, r1
 414:	81 14       	cp	r8, r1
 416:	91 04       	cpc	r9, r1
 418:	79 f7       	brne	.-34     	; 0x3f8 <vfprintf+0x19a>
 41a:	e1 c0       	rjmp	.+450    	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 41c:	84 36       	cpi	r24, 0x64	; 100
 41e:	11 f0       	breq	.+4      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 420:	89 36       	cpi	r24, 0x69	; 105
 422:	39 f5       	brne	.+78     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 424:	f8 01       	movw	r30, r16
 426:	37 fe       	sbrs	r3, 7
 428:	07 c0       	rjmp	.+14     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 42a:	60 81       	ld	r22, Z
 42c:	71 81       	ldd	r23, Z+1	; 0x01
 42e:	82 81       	ldd	r24, Z+2	; 0x02
 430:	93 81       	ldd	r25, Z+3	; 0x03
 432:	0c 5f       	subi	r16, 0xFC	; 252
 434:	1f 4f       	sbci	r17, 0xFF	; 255
 436:	08 c0       	rjmp	.+16     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 438:	60 81       	ld	r22, Z
 43a:	71 81       	ldd	r23, Z+1	; 0x01
 43c:	07 2e       	mov	r0, r23
 43e:	00 0c       	add	r0, r0
 440:	88 0b       	sbc	r24, r24
 442:	99 0b       	sbc	r25, r25
 444:	0e 5f       	subi	r16, 0xFE	; 254
 446:	1f 4f       	sbci	r17, 0xFF	; 255
 448:	f3 2d       	mov	r31, r3
 44a:	ff 76       	andi	r31, 0x6F	; 111
 44c:	3f 2e       	mov	r3, r31
 44e:	97 ff       	sbrs	r25, 7
 450:	09 c0       	rjmp	.+18     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 452:	90 95       	com	r25
 454:	80 95       	com	r24
 456:	70 95       	com	r23
 458:	61 95       	neg	r22
 45a:	7f 4f       	sbci	r23, 0xFF	; 255
 45c:	8f 4f       	sbci	r24, 0xFF	; 255
 45e:	9f 4f       	sbci	r25, 0xFF	; 255
 460:	f0 68       	ori	r31, 0x80	; 128
 462:	3f 2e       	mov	r3, r31
 464:	2a e0       	ldi	r18, 0x0A	; 10
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	a3 01       	movw	r20, r6
 46a:	1d d1       	rcall	.+570    	; 0x6a6 <__ultoa_invert>
 46c:	88 2e       	mov	r8, r24
 46e:	86 18       	sub	r8, r6
 470:	44 c0       	rjmp	.+136    	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 472:	85 37       	cpi	r24, 0x75	; 117
 474:	31 f4       	brne	.+12     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 476:	23 2d       	mov	r18, r3
 478:	2f 7e       	andi	r18, 0xEF	; 239
 47a:	b2 2e       	mov	r11, r18
 47c:	2a e0       	ldi	r18, 0x0A	; 10
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	25 c0       	rjmp	.+74     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 482:	93 2d       	mov	r25, r3
 484:	99 7f       	andi	r25, 0xF9	; 249
 486:	b9 2e       	mov	r11, r25
 488:	8f 36       	cpi	r24, 0x6F	; 111
 48a:	c1 f0       	breq	.+48     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 48c:	18 f4       	brcc	.+6      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 48e:	88 35       	cpi	r24, 0x58	; 88
 490:	79 f0       	breq	.+30     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 492:	ae c0       	rjmp	.+348    	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 494:	80 37       	cpi	r24, 0x70	; 112
 496:	19 f0       	breq	.+6      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 498:	88 37       	cpi	r24, 0x78	; 120
 49a:	21 f0       	breq	.+8      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 49c:	a9 c0       	rjmp	.+338    	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 49e:	e9 2f       	mov	r30, r25
 4a0:	e0 61       	ori	r30, 0x10	; 16
 4a2:	be 2e       	mov	r11, r30
 4a4:	b4 fe       	sbrs	r11, 4
 4a6:	0d c0       	rjmp	.+26     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4a8:	fb 2d       	mov	r31, r11
 4aa:	f4 60       	ori	r31, 0x04	; 4
 4ac:	bf 2e       	mov	r11, r31
 4ae:	09 c0       	rjmp	.+18     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b0:	34 fe       	sbrs	r3, 4
 4b2:	0a c0       	rjmp	.+20     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b4:	29 2f       	mov	r18, r25
 4b6:	26 60       	ori	r18, 0x06	; 6
 4b8:	b2 2e       	mov	r11, r18
 4ba:	06 c0       	rjmp	.+12     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4bc:	28 e0       	ldi	r18, 0x08	; 8
 4be:	30 e0       	ldi	r19, 0x00	; 0
 4c0:	05 c0       	rjmp	.+10     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c2:	20 e1       	ldi	r18, 0x10	; 16
 4c4:	30 e0       	ldi	r19, 0x00	; 0
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c8:	20 e1       	ldi	r18, 0x10	; 16
 4ca:	32 e0       	ldi	r19, 0x02	; 2
 4cc:	f8 01       	movw	r30, r16
 4ce:	b7 fe       	sbrs	r11, 7
 4d0:	07 c0       	rjmp	.+14     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d2:	60 81       	ld	r22, Z
 4d4:	71 81       	ldd	r23, Z+1	; 0x01
 4d6:	82 81       	ldd	r24, Z+2	; 0x02
 4d8:	93 81       	ldd	r25, Z+3	; 0x03
 4da:	0c 5f       	subi	r16, 0xFC	; 252
 4dc:	1f 4f       	sbci	r17, 0xFF	; 255
 4de:	06 c0       	rjmp	.+12     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4e0:	60 81       	ld	r22, Z
 4e2:	71 81       	ldd	r23, Z+1	; 0x01
 4e4:	80 e0       	ldi	r24, 0x00	; 0
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	0e 5f       	subi	r16, 0xFE	; 254
 4ea:	1f 4f       	sbci	r17, 0xFF	; 255
 4ec:	a3 01       	movw	r20, r6
 4ee:	db d0       	rcall	.+438    	; 0x6a6 <__ultoa_invert>
 4f0:	88 2e       	mov	r8, r24
 4f2:	86 18       	sub	r8, r6
 4f4:	fb 2d       	mov	r31, r11
 4f6:	ff 77       	andi	r31, 0x7F	; 127
 4f8:	3f 2e       	mov	r3, r31
 4fa:	36 fe       	sbrs	r3, 6
 4fc:	0d c0       	rjmp	.+26     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4fe:	23 2d       	mov	r18, r3
 500:	2e 7f       	andi	r18, 0xFE	; 254
 502:	a2 2e       	mov	r10, r18
 504:	89 14       	cp	r8, r9
 506:	58 f4       	brcc	.+22     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 508:	34 fe       	sbrs	r3, 4
 50a:	0b c0       	rjmp	.+22     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 50c:	32 fc       	sbrc	r3, 2
 50e:	09 c0       	rjmp	.+18     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 510:	83 2d       	mov	r24, r3
 512:	8e 7e       	andi	r24, 0xEE	; 238
 514:	a8 2e       	mov	r10, r24
 516:	05 c0       	rjmp	.+10     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 518:	b8 2c       	mov	r11, r8
 51a:	a3 2c       	mov	r10, r3
 51c:	03 c0       	rjmp	.+6      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 51e:	b8 2c       	mov	r11, r8
 520:	01 c0       	rjmp	.+2      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 522:	b9 2c       	mov	r11, r9
 524:	a4 fe       	sbrs	r10, 4
 526:	0f c0       	rjmp	.+30     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 528:	fe 01       	movw	r30, r28
 52a:	e8 0d       	add	r30, r8
 52c:	f1 1d       	adc	r31, r1
 52e:	80 81       	ld	r24, Z
 530:	80 33       	cpi	r24, 0x30	; 48
 532:	21 f4       	brne	.+8      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 534:	9a 2d       	mov	r25, r10
 536:	99 7e       	andi	r25, 0xE9	; 233
 538:	a9 2e       	mov	r10, r25
 53a:	09 c0       	rjmp	.+18     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 53c:	a2 fe       	sbrs	r10, 2
 53e:	06 c0       	rjmp	.+12     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 540:	b3 94       	inc	r11
 542:	b3 94       	inc	r11
 544:	04 c0       	rjmp	.+8      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 546:	8a 2d       	mov	r24, r10
 548:	86 78       	andi	r24, 0x86	; 134
 54a:	09 f0       	breq	.+2      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 54c:	b3 94       	inc	r11
 54e:	a3 fc       	sbrc	r10, 3
 550:	10 c0       	rjmp	.+32     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 552:	a0 fe       	sbrs	r10, 0
 554:	06 c0       	rjmp	.+12     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 556:	b2 14       	cp	r11, r2
 558:	80 f4       	brcc	.+32     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 55a:	28 0c       	add	r2, r8
 55c:	92 2c       	mov	r9, r2
 55e:	9b 18       	sub	r9, r11
 560:	0d c0       	rjmp	.+26     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 562:	b2 14       	cp	r11, r2
 564:	58 f4       	brcc	.+22     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 566:	b6 01       	movw	r22, r12
 568:	80 e2       	ldi	r24, 0x20	; 32
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	60 d0       	rcall	.+192    	; 0x62e <fputc>
 56e:	b3 94       	inc	r11
 570:	f8 cf       	rjmp	.-16     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 572:	b2 14       	cp	r11, r2
 574:	18 f4       	brcc	.+6      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 576:	2b 18       	sub	r2, r11
 578:	02 c0       	rjmp	.+4      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 57a:	98 2c       	mov	r9, r8
 57c:	21 2c       	mov	r2, r1
 57e:	a4 fe       	sbrs	r10, 4
 580:	0f c0       	rjmp	.+30     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 582:	b6 01       	movw	r22, r12
 584:	80 e3       	ldi	r24, 0x30	; 48
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	52 d0       	rcall	.+164    	; 0x62e <fputc>
 58a:	a2 fe       	sbrs	r10, 2
 58c:	16 c0       	rjmp	.+44     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 58e:	a1 fc       	sbrc	r10, 1
 590:	03 c0       	rjmp	.+6      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 592:	88 e7       	ldi	r24, 0x78	; 120
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	02 c0       	rjmp	.+4      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 598:	88 e5       	ldi	r24, 0x58	; 88
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	b6 01       	movw	r22, r12
 59e:	0c c0       	rjmp	.+24     	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 5a0:	8a 2d       	mov	r24, r10
 5a2:	86 78       	andi	r24, 0x86	; 134
 5a4:	51 f0       	breq	.+20     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5a6:	a1 fe       	sbrs	r10, 1
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5aa:	8b e2       	ldi	r24, 0x2B	; 43
 5ac:	01 c0       	rjmp	.+2      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5ae:	80 e2       	ldi	r24, 0x20	; 32
 5b0:	a7 fc       	sbrc	r10, 7
 5b2:	8d e2       	ldi	r24, 0x2D	; 45
 5b4:	b6 01       	movw	r22, r12
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	3a d0       	rcall	.+116    	; 0x62e <fputc>
 5ba:	89 14       	cp	r8, r9
 5bc:	30 f4       	brcc	.+12     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5be:	b6 01       	movw	r22, r12
 5c0:	80 e3       	ldi	r24, 0x30	; 48
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	34 d0       	rcall	.+104    	; 0x62e <fputc>
 5c6:	9a 94       	dec	r9
 5c8:	f8 cf       	rjmp	.-16     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5ca:	8a 94       	dec	r8
 5cc:	f3 01       	movw	r30, r6
 5ce:	e8 0d       	add	r30, r8
 5d0:	f1 1d       	adc	r31, r1
 5d2:	80 81       	ld	r24, Z
 5d4:	b6 01       	movw	r22, r12
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	2a d0       	rcall	.+84     	; 0x62e <fputc>
 5da:	81 10       	cpse	r8, r1
 5dc:	f6 cf       	rjmp	.-20     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5de:	22 20       	and	r2, r2
 5e0:	09 f4       	brne	.+2      	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5e2:	4e ce       	rjmp	.-868    	; 0x280 <vfprintf+0x22>
 5e4:	b6 01       	movw	r22, r12
 5e6:	80 e2       	ldi	r24, 0x20	; 32
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	21 d0       	rcall	.+66     	; 0x62e <fputc>
 5ec:	2a 94       	dec	r2
 5ee:	f7 cf       	rjmp	.-18     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5f0:	f6 01       	movw	r30, r12
 5f2:	86 81       	ldd	r24, Z+6	; 0x06
 5f4:	97 81       	ldd	r25, Z+7	; 0x07
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f8:	8f ef       	ldi	r24, 0xFF	; 255
 5fa:	9f ef       	ldi	r25, 0xFF	; 255
 5fc:	2b 96       	adiw	r28, 0x0b	; 11
 5fe:	e2 e1       	ldi	r30, 0x12	; 18
 600:	c9 c0       	rjmp	.+402    	; 0x794 <__epilogue_restores__>

00000602 <strnlen_P>:
 602:	fc 01       	movw	r30, r24
 604:	05 90       	lpm	r0, Z+
 606:	61 50       	subi	r22, 0x01	; 1
 608:	70 40       	sbci	r23, 0x00	; 0
 60a:	01 10       	cpse	r0, r1
 60c:	d8 f7       	brcc	.-10     	; 0x604 <strnlen_P+0x2>
 60e:	80 95       	com	r24
 610:	90 95       	com	r25
 612:	8e 0f       	add	r24, r30
 614:	9f 1f       	adc	r25, r31
 616:	08 95       	ret

00000618 <strnlen>:
 618:	fc 01       	movw	r30, r24
 61a:	61 50       	subi	r22, 0x01	; 1
 61c:	70 40       	sbci	r23, 0x00	; 0
 61e:	01 90       	ld	r0, Z+
 620:	01 10       	cpse	r0, r1
 622:	d8 f7       	brcc	.-10     	; 0x61a <strnlen+0x2>
 624:	80 95       	com	r24
 626:	90 95       	com	r25
 628:	8e 0f       	add	r24, r30
 62a:	9f 1f       	adc	r25, r31
 62c:	08 95       	ret

0000062e <fputc>:
 62e:	0f 93       	push	r16
 630:	1f 93       	push	r17
 632:	cf 93       	push	r28
 634:	df 93       	push	r29
 636:	fb 01       	movw	r30, r22
 638:	23 81       	ldd	r18, Z+3	; 0x03
 63a:	21 fd       	sbrc	r18, 1
 63c:	03 c0       	rjmp	.+6      	; 0x644 <fputc+0x16>
 63e:	8f ef       	ldi	r24, 0xFF	; 255
 640:	9f ef       	ldi	r25, 0xFF	; 255
 642:	2c c0       	rjmp	.+88     	; 0x69c <fputc+0x6e>
 644:	22 ff       	sbrs	r18, 2
 646:	16 c0       	rjmp	.+44     	; 0x674 <fputc+0x46>
 648:	46 81       	ldd	r20, Z+6	; 0x06
 64a:	57 81       	ldd	r21, Z+7	; 0x07
 64c:	24 81       	ldd	r18, Z+4	; 0x04
 64e:	35 81       	ldd	r19, Z+5	; 0x05
 650:	42 17       	cp	r20, r18
 652:	53 07       	cpc	r21, r19
 654:	44 f4       	brge	.+16     	; 0x666 <fputc+0x38>
 656:	a0 81       	ld	r26, Z
 658:	b1 81       	ldd	r27, Z+1	; 0x01
 65a:	9d 01       	movw	r18, r26
 65c:	2f 5f       	subi	r18, 0xFF	; 255
 65e:	3f 4f       	sbci	r19, 0xFF	; 255
 660:	20 83       	st	Z, r18
 662:	31 83       	std	Z+1, r19	; 0x01
 664:	8c 93       	st	X, r24
 666:	26 81       	ldd	r18, Z+6	; 0x06
 668:	37 81       	ldd	r19, Z+7	; 0x07
 66a:	2f 5f       	subi	r18, 0xFF	; 255
 66c:	3f 4f       	sbci	r19, 0xFF	; 255
 66e:	26 83       	std	Z+6, r18	; 0x06
 670:	37 83       	std	Z+7, r19	; 0x07
 672:	14 c0       	rjmp	.+40     	; 0x69c <fputc+0x6e>
 674:	8b 01       	movw	r16, r22
 676:	ec 01       	movw	r28, r24
 678:	fb 01       	movw	r30, r22
 67a:	00 84       	ldd	r0, Z+8	; 0x08
 67c:	f1 85       	ldd	r31, Z+9	; 0x09
 67e:	e0 2d       	mov	r30, r0
 680:	09 95       	icall
 682:	89 2b       	or	r24, r25
 684:	e1 f6       	brne	.-72     	; 0x63e <fputc+0x10>
 686:	d8 01       	movw	r26, r16
 688:	16 96       	adiw	r26, 0x06	; 6
 68a:	8d 91       	ld	r24, X+
 68c:	9c 91       	ld	r25, X
 68e:	17 97       	sbiw	r26, 0x07	; 7
 690:	01 96       	adiw	r24, 0x01	; 1
 692:	16 96       	adiw	r26, 0x06	; 6
 694:	8d 93       	st	X+, r24
 696:	9c 93       	st	X, r25
 698:	17 97       	sbiw	r26, 0x07	; 7
 69a:	ce 01       	movw	r24, r28
 69c:	df 91       	pop	r29
 69e:	cf 91       	pop	r28
 6a0:	1f 91       	pop	r17
 6a2:	0f 91       	pop	r16
 6a4:	08 95       	ret

000006a6 <__ultoa_invert>:
 6a6:	fa 01       	movw	r30, r20
 6a8:	aa 27       	eor	r26, r26
 6aa:	28 30       	cpi	r18, 0x08	; 8
 6ac:	51 f1       	breq	.+84     	; 0x702 <__ultoa_invert+0x5c>
 6ae:	20 31       	cpi	r18, 0x10	; 16
 6b0:	81 f1       	breq	.+96     	; 0x712 <__ultoa_invert+0x6c>
 6b2:	e8 94       	clt
 6b4:	6f 93       	push	r22
 6b6:	6e 7f       	andi	r22, 0xFE	; 254
 6b8:	6e 5f       	subi	r22, 0xFE	; 254
 6ba:	7f 4f       	sbci	r23, 0xFF	; 255
 6bc:	8f 4f       	sbci	r24, 0xFF	; 255
 6be:	9f 4f       	sbci	r25, 0xFF	; 255
 6c0:	af 4f       	sbci	r26, 0xFF	; 255
 6c2:	b1 e0       	ldi	r27, 0x01	; 1
 6c4:	3e d0       	rcall	.+124    	; 0x742 <__ultoa_invert+0x9c>
 6c6:	b4 e0       	ldi	r27, 0x04	; 4
 6c8:	3c d0       	rcall	.+120    	; 0x742 <__ultoa_invert+0x9c>
 6ca:	67 0f       	add	r22, r23
 6cc:	78 1f       	adc	r23, r24
 6ce:	89 1f       	adc	r24, r25
 6d0:	9a 1f       	adc	r25, r26
 6d2:	a1 1d       	adc	r26, r1
 6d4:	68 0f       	add	r22, r24
 6d6:	79 1f       	adc	r23, r25
 6d8:	8a 1f       	adc	r24, r26
 6da:	91 1d       	adc	r25, r1
 6dc:	a1 1d       	adc	r26, r1
 6de:	6a 0f       	add	r22, r26
 6e0:	71 1d       	adc	r23, r1
 6e2:	81 1d       	adc	r24, r1
 6e4:	91 1d       	adc	r25, r1
 6e6:	a1 1d       	adc	r26, r1
 6e8:	20 d0       	rcall	.+64     	; 0x72a <__ultoa_invert+0x84>
 6ea:	09 f4       	brne	.+2      	; 0x6ee <__ultoa_invert+0x48>
 6ec:	68 94       	set
 6ee:	3f 91       	pop	r19
 6f0:	2a e0       	ldi	r18, 0x0A	; 10
 6f2:	26 9f       	mul	r18, r22
 6f4:	11 24       	eor	r1, r1
 6f6:	30 19       	sub	r19, r0
 6f8:	30 5d       	subi	r19, 0xD0	; 208
 6fa:	31 93       	st	Z+, r19
 6fc:	de f6       	brtc	.-74     	; 0x6b4 <__ultoa_invert+0xe>
 6fe:	cf 01       	movw	r24, r30
 700:	08 95       	ret
 702:	46 2f       	mov	r20, r22
 704:	47 70       	andi	r20, 0x07	; 7
 706:	40 5d       	subi	r20, 0xD0	; 208
 708:	41 93       	st	Z+, r20
 70a:	b3 e0       	ldi	r27, 0x03	; 3
 70c:	0f d0       	rcall	.+30     	; 0x72c <__ultoa_invert+0x86>
 70e:	c9 f7       	brne	.-14     	; 0x702 <__ultoa_invert+0x5c>
 710:	f6 cf       	rjmp	.-20     	; 0x6fe <__ultoa_invert+0x58>
 712:	46 2f       	mov	r20, r22
 714:	4f 70       	andi	r20, 0x0F	; 15
 716:	40 5d       	subi	r20, 0xD0	; 208
 718:	4a 33       	cpi	r20, 0x3A	; 58
 71a:	18 f0       	brcs	.+6      	; 0x722 <__ultoa_invert+0x7c>
 71c:	49 5d       	subi	r20, 0xD9	; 217
 71e:	31 fd       	sbrc	r19, 1
 720:	40 52       	subi	r20, 0x20	; 32
 722:	41 93       	st	Z+, r20
 724:	02 d0       	rcall	.+4      	; 0x72a <__ultoa_invert+0x84>
 726:	a9 f7       	brne	.-22     	; 0x712 <__ultoa_invert+0x6c>
 728:	ea cf       	rjmp	.-44     	; 0x6fe <__ultoa_invert+0x58>
 72a:	b4 e0       	ldi	r27, 0x04	; 4
 72c:	a6 95       	lsr	r26
 72e:	97 95       	ror	r25
 730:	87 95       	ror	r24
 732:	77 95       	ror	r23
 734:	67 95       	ror	r22
 736:	ba 95       	dec	r27
 738:	c9 f7       	brne	.-14     	; 0x72c <__ultoa_invert+0x86>
 73a:	00 97       	sbiw	r24, 0x00	; 0
 73c:	61 05       	cpc	r22, r1
 73e:	71 05       	cpc	r23, r1
 740:	08 95       	ret
 742:	9b 01       	movw	r18, r22
 744:	ac 01       	movw	r20, r24
 746:	0a 2e       	mov	r0, r26
 748:	06 94       	lsr	r0
 74a:	57 95       	ror	r21
 74c:	47 95       	ror	r20
 74e:	37 95       	ror	r19
 750:	27 95       	ror	r18
 752:	ba 95       	dec	r27
 754:	c9 f7       	brne	.-14     	; 0x748 <__ultoa_invert+0xa2>
 756:	62 0f       	add	r22, r18
 758:	73 1f       	adc	r23, r19
 75a:	84 1f       	adc	r24, r20
 75c:	95 1f       	adc	r25, r21
 75e:	a0 1d       	adc	r26, r0
 760:	08 95       	ret

00000762 <__prologue_saves__>:
 762:	2f 92       	push	r2
 764:	3f 92       	push	r3
 766:	4f 92       	push	r4
 768:	5f 92       	push	r5
 76a:	6f 92       	push	r6
 76c:	7f 92       	push	r7
 76e:	8f 92       	push	r8
 770:	9f 92       	push	r9
 772:	af 92       	push	r10
 774:	bf 92       	push	r11
 776:	cf 92       	push	r12
 778:	df 92       	push	r13
 77a:	ef 92       	push	r14
 77c:	ff 92       	push	r15
 77e:	0f 93       	push	r16
 780:	1f 93       	push	r17
 782:	cf 93       	push	r28
 784:	df 93       	push	r29
 786:	cd b7       	in	r28, 0x3d	; 61
 788:	de b7       	in	r29, 0x3e	; 62
 78a:	ca 1b       	sub	r28, r26
 78c:	db 0b       	sbc	r29, r27
 78e:	cd bf       	out	0x3d, r28	; 61
 790:	de bf       	out	0x3e, r29	; 62
 792:	09 94       	ijmp

00000794 <__epilogue_restores__>:
 794:	2a 88       	ldd	r2, Y+18	; 0x12
 796:	39 88       	ldd	r3, Y+17	; 0x11
 798:	48 88       	ldd	r4, Y+16	; 0x10
 79a:	5f 84       	ldd	r5, Y+15	; 0x0f
 79c:	6e 84       	ldd	r6, Y+14	; 0x0e
 79e:	7d 84       	ldd	r7, Y+13	; 0x0d
 7a0:	8c 84       	ldd	r8, Y+12	; 0x0c
 7a2:	9b 84       	ldd	r9, Y+11	; 0x0b
 7a4:	aa 84       	ldd	r10, Y+10	; 0x0a
 7a6:	b9 84       	ldd	r11, Y+9	; 0x09
 7a8:	c8 84       	ldd	r12, Y+8	; 0x08
 7aa:	df 80       	ldd	r13, Y+7	; 0x07
 7ac:	ee 80       	ldd	r14, Y+6	; 0x06
 7ae:	fd 80       	ldd	r15, Y+5	; 0x05
 7b0:	0c 81       	ldd	r16, Y+4	; 0x04
 7b2:	1b 81       	ldd	r17, Y+3	; 0x03
 7b4:	aa 81       	ldd	r26, Y+2	; 0x02
 7b6:	b9 81       	ldd	r27, Y+1	; 0x01
 7b8:	ce 0f       	add	r28, r30
 7ba:	d1 1d       	adc	r29, r1
 7bc:	cd bf       	out	0x3d, r28	; 61
 7be:	de bf       	out	0x3e, r29	; 62
 7c0:	ed 01       	movw	r28, r26
 7c2:	08 95       	ret

000007c4 <_exit>:
 7c4:	f8 94       	cli

000007c6 <__stop_program>:
 7c6:	ff cf       	rjmp	.-2      	; 0x7c6 <__stop_program>
