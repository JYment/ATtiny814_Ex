
ExCCL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803e00  00803e00  000000e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000008c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000000e0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000110  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000014c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000023e8  00000000  00000000  0000016c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001542  00000000  00000000  00002554  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000273  00000000  00000000  00003a96  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00003d0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001392  00000000  00000000  00003d30  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  000050c2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	20 c0       	rjmp	.+64     	; 0x44 <__bad_interrupt>
   4:	1f c0       	rjmp	.+62     	; 0x44 <__bad_interrupt>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__bad_interrupt>
   8:	1d c0       	rjmp	.+58     	; 0x44 <__bad_interrupt>
   a:	1c c0       	rjmp	.+56     	; 0x44 <__bad_interrupt>
   c:	1b c0       	rjmp	.+54     	; 0x44 <__bad_interrupt>
   e:	1a c0       	rjmp	.+52     	; 0x44 <__bad_interrupt>
  10:	19 c0       	rjmp	.+50     	; 0x44 <__bad_interrupt>
  12:	18 c0       	rjmp	.+48     	; 0x44 <__bad_interrupt>
  14:	17 c0       	rjmp	.+46     	; 0x44 <__bad_interrupt>
  16:	16 c0       	rjmp	.+44     	; 0x44 <__bad_interrupt>
  18:	15 c0       	rjmp	.+42     	; 0x44 <__bad_interrupt>
  1a:	14 c0       	rjmp	.+40     	; 0x44 <__bad_interrupt>
  1c:	13 c0       	rjmp	.+38     	; 0x44 <__bad_interrupt>
  1e:	12 c0       	rjmp	.+36     	; 0x44 <__bad_interrupt>
  20:	11 c0       	rjmp	.+34     	; 0x44 <__bad_interrupt>
  22:	10 c0       	rjmp	.+32     	; 0x44 <__bad_interrupt>
  24:	0f c0       	rjmp	.+30     	; 0x44 <__bad_interrupt>
  26:	0e c0       	rjmp	.+28     	; 0x44 <__bad_interrupt>
  28:	0d c0       	rjmp	.+26     	; 0x44 <__bad_interrupt>
  2a:	0c c0       	rjmp	.+24     	; 0x44 <__bad_interrupt>
  2c:	0b c0       	rjmp	.+22     	; 0x44 <__bad_interrupt>
  2e:	0a c0       	rjmp	.+20     	; 0x44 <__bad_interrupt>
  30:	09 c0       	rjmp	.+18     	; 0x44 <__bad_interrupt>
  32:	08 c0       	rjmp	.+16     	; 0x44 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	cd bf       	out	0x3d, r28	; 61
  3c:	df e3       	ldi	r29, 0x3F	; 63
  3e:	de bf       	out	0x3e, r29	; 62
  40:	02 d0       	rcall	.+4      	; 0x46 <main>
  42:	22 c0       	rjmp	.+68     	; 0x88 <_exit>

00000044 <__bad_interrupt>:
  44:	dd cf       	rjmp	.-70     	; 0x0 <__vectors>

00000046 <main>:
#include <avr/io.h>
#include <avr/sfr_defs.h>

int main(void)
{
    PORTA.DIRSET	= _BV(7);
  46:	80 e8       	ldi	r24, 0x80	; 128
  48:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <__TEXT_REGION_LENGTH__+0x700401>
	
	TCA0.SINGLE.CTRLB	= TCA_SINGLE_CMP0EN_bm | TCA_SINGLE_CMP1EN_bm | TCA_SINGLE_CMP2EN_bm;
  4c:	e0 e0       	ldi	r30, 0x00	; 0
  4e:	fa e0       	ldi	r31, 0x0A	; 10
  50:	80 e7       	ldi	r24, 0x70	; 112
  52:	81 83       	std	Z+1, r24	; 0x01
	TCA0.SINGLE.CTRLA	= TCA_SINGLE_CLKSEL_DIV64_gc | TCA_SINGLE_ENABLE_bm;
  54:	8b e0       	ldi	r24, 0x0B	; 11
  56:	80 83       	st	Z, r24
	TCA0.SINGLE.CMP0	= 0x4000;
  58:	80 e0       	ldi	r24, 0x00	; 0
  5a:	90 e4       	ldi	r25, 0x40	; 64
  5c:	80 a7       	std	Z+40, r24	; 0x28
  5e:	91 a7       	std	Z+41, r25	; 0x29
	TCA0.SINGLE.CMP1	= 0x8000;
  60:	80 e0       	ldi	r24, 0x00	; 0
  62:	90 e8       	ldi	r25, 0x80	; 128
  64:	82 a7       	std	Z+42, r24	; 0x2a
  66:	93 a7       	std	Z+43, r25	; 0x2b
	TCA0.SINGLE.CMP2	= 0xC000;
  68:	80 e0       	ldi	r24, 0x00	; 0
  6a:	90 ec       	ldi	r25, 0xC0	; 192
  6c:	84 a7       	std	Z+44, r24	; 0x2c
  6e:	95 a7       	std	Z+45, r25	; 0x2d
	
	CCL.LUT1CTRLC	= CCL_INSEL2_TCA0_gc;
  70:	e0 ec       	ldi	r30, 0xC0	; 192
  72:	f1 e0       	ldi	r31, 0x01	; 1
  74:	88 e0       	ldi	r24, 0x08	; 8
  76:	83 87       	std	Z+11, r24	; 0x0b
	CCL.LUT1CTRLB	= CCL_INSEL1_TCA0_gc | CCL_INSEL0_TCA0_gc;
  78:	88 e8       	ldi	r24, 0x88	; 136
  7a:	82 87       	std	Z+10, r24	; 0x0a
	CCL.TRUTH1	= 9;
  7c:	89 e0       	ldi	r24, 0x09	; 9
  7e:	84 87       	std	Z+12, r24	; 0x0c
	CCL.LUT1CTRLA	= CCL_OUTEN_bm | CCL_ENABLE_bm;
  80:	81 87       	std	Z+9, r24	; 0x09
	CCL.CTRLA	= CCL_ENABLE_bm;
  82:	81 e0       	ldi	r24, 0x01	; 1
  84:	80 83       	st	Z, r24
  86:	ff cf       	rjmp	.-2      	; 0x86 <main+0x40>

00000088 <_exit>:
  88:	f8 94       	cli

0000008a <__stop_program>:
  8a:	ff cf       	rjmp	.-2      	; 0x8a <__stop_program>
